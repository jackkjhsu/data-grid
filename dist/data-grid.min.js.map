{
  "version": 3,
  "sources": ["../src/utils/camelize.js", "../src/utils/normalizeData.js", "../src/utils/shortcuts.js", "../src/core/base-element.js", "../src/utils/addSelectOption.js", "../src/utils/appendParamsToUrl.js", "../src/utils/convertArray.js", "../src/utils/elementOffset.js", "../src/utils/interpolate.js", "../src/utils/getTextWidth.js", "../src/utils/randstr.js", "../src/utils/debounce.js", "../src/data-grid.js", "../src/core/base-plugin.js", "../src/plugins/column-resizer.js", "../src/utils/getParentElement.js", "../src/plugins/context-menu.js", "../src/plugins/draggable-headers.js", "../src/plugins/touch-support.js", "../src/plugins/selectable-rows.js", "../src/plugins/fixed-height.js", "../src/plugins/autosize-column.js", "../src/plugins/responsive-grid.js", "../src/plugins/row-actions.js", "../src/plugins/editable-column.js", "../src/plugins/spinner-support.js", "../src/plugins/save-state.js", "../data-grid.js"],
  "sourcesContent": ["/**\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nexport default function camelize(str) {\r\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase());\r\n}\r\n", "/**\r\n * Parse data attribute and return properly typed data\r\n * @param {String} v\r\n * @returns {any}\r\n */\r\nexport default function normalizeData(v) {\r\n  // Bool\r\n  if (v === \"true\") {\r\n    return true;\r\n  }\r\n  if (v === \"false\") {\r\n    return false;\r\n  }\r\n  // Null or empty\r\n  if (v === \"\" || v === \"null\") {\r\n    return null;\r\n  }\r\n  // Numeric attributes\r\n  if (v === Number(v).toString()) {\r\n    return Number(v);\r\n  }\r\n  // Only attempt json parsing for array or objects\r\n  if (v && [\"[\", \"{\"].includes(v.substring(0, 1))) {\r\n    try {\r\n      // In case we have only single quoted values, like ['one', 'two', 'three']\r\n      if (v.indexOf('\"') === -1) {\r\n        v = v.replace(/'/g, '\"');\r\n      }\r\n      return JSON.parse(decodeURIComponent(v));\r\n    } catch {\r\n      console.error(\"Failed to parse \" + v);\r\n      return {};\r\n    }\r\n  }\r\n  return v;\r\n}\r\n", "/**\r\n * @typedef FlexibleHTMLProps\r\n * @property {boolean} [checked] (HTMLInputElement)\r\n * @property {string} [value] (HTMLInputElement)\r\n * @property {number} [rowHeight] (HTMLTableRowElement)\r\n *\r\n * A flexible type HTMLElement type that does not require using instanceof all over the place\r\n * Make sure that your selector is indeed valid\r\n * Only includes most commons props\r\n * @typedef {HTMLElement & FlexibleHTMLProps} FlexibleHTMLElement\r\n */\r\n\r\n/**\r\n * Keep this as reference for easy documentation\r\n * @typedef {HTMLElement&HTMLInputElement&HTMLTableRowElement} MixedHTMLElement\r\n */\r\n\r\n/**\r\n * @typedef FlexibleEventProps\r\n * @property {FlexibleHTMLElement} target\r\n * @property {FlexibleHTMLElement} currentTarget\r\n * @property {DataTransfer} [dataTransfer] (DragEvent)\r\n * @property {number} [clientX] (MouseEvent)\r\n * @property {number} [clientY] (MouseEvent)\r\n *\r\n * @typedef {Event & FlexibleEventProps} FlexibleEvent\r\n */\r\n\r\n/**\r\n * Keep this as reference for easy documentation\r\n * @typedef {Event&MouseEvent&InputEvent&DragEvent&FocusEvent&KeyboardEvent&PointerEvent} MixedEvent\r\n */\r\n\r\n/**\r\n * @callback FlexibleListener\r\n * @param {FlexibleEvent} event\r\n */\r\n\r\nclass FlexibleEventListenerObject {\r\n  /**\r\n   * @param {FlexibleEvent} e\r\n   */\r\n  handleEvent(e) {}\r\n}\r\n\r\nconst supportedPassiveTypes = [\r\n  \"scroll\",\r\n  \"wheel\",\r\n  \"touchstart\",\r\n  \"touchmove\",\r\n  \"touchenter\",\r\n  \"touchend\",\r\n  \"touchleave\",\r\n  \"mouseout\",\r\n  \"mouseleave\",\r\n  \"mouseup\",\r\n  \"mousedown\",\r\n  \"mousemove\",\r\n  \"mouseenter\",\r\n  \"mousewheel\",\r\n  \"mouseover\",\r\n];\r\n\r\n/**\r\n * Automatically set passive options based on type\r\n * @param {string} type\r\n * @returns {AddEventListenerOptions}\r\n */\r\nfunction passiveOpts(type) {\r\n  if (supportedPassiveTypes.includes(type)) {\r\n    return { passive: true };\r\n  }\r\n  return {};\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {any}\r\n */\r\nexport function getAttribute(el, name) {\r\n  return el.getAttribute(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {Boolean}\r\n */\r\nexport function hasAttribute(el, name) {\r\n  return el.hasAttribute(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @param {any} v\r\n * @param {Boolean} check Prevent setting if attribute is already there\r\n */\r\nexport function setAttribute(el, name, v = \"\", check = false) {\r\n  if (check && hasAttribute(el, name)) return;\r\n  el.setAttribute(name, \"\" + v);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function removeAttribute(el, name) {\r\n  if (hasAttribute(el, name)) {\r\n    el.removeAttribute(name);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerObject|FlexibleListener} listener\r\n */\r\nexport function on(el, type, listener) {\r\n  el.addEventListener(type, listener, passiveOpts(type));\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerObject|FlexibleListener} listener\r\n */\r\nexport function off(el, type, listener) {\r\n  el.removeEventListener(type, listener, passiveOpts(type));\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerObject|FlexibleListener} listener\r\n */\r\nexport function one(el, type, listener) {\r\n  el.addEventListener(type, listener, {\r\n    once: true,\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {String} name\r\n * @param {any} data\r\n * @param {Boolean} bubbles\r\n */\r\nexport function dispatch(el, name, data = {}, bubbles = false) {\r\n  let opts = {};\r\n  if (bubbles) {\r\n    opts.bubbles = true;\r\n  }\r\n  if (data) {\r\n    opts.detail = data;\r\n  }\r\n  el.dispatchEvent(new CustomEvent(name, opts));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {Boolean}\r\n */\r\nexport function hasClass(el, name) {\r\n  return el.classList.contains(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function addClass(el, name) {\r\n  el.classList.add(...name.split(\" \"));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function removeClass(el, name) {\r\n  el.classList.remove(...name.split(\" \"));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function toggleClass(el, name) {\r\n  el.classList.toggle(name);\r\n}\r\n\r\n/**\r\n * @param {String|HTMLElement} selector\r\n * @param {HTMLElement|Document} base\r\n * @returns {FlexibleHTMLElement|null}\r\n */\r\nexport function $(selector, base = document) {\r\n  if (selector instanceof HTMLElement) {\r\n    return selector;\r\n  }\r\n  return base.querySelector(selector);\r\n}\r\n\r\n/**\r\n * @param {String} selector\r\n * @param {Element|Document} base\r\n * @returns {Array<FlexibleHTMLElement>}\r\n */\r\nexport function $$(selector, base = document) {\r\n  return Array.from(base.querySelectorAll(selector));\r\n}\r\n\r\n/**\r\n * Easily retrieve untyped element\r\n * For actual type, prefer use of el.querySelector\r\n * @param {HTMLElement} el\r\n * @param {String|HTMLElement} selector\r\n * @returns {FlexibleHTMLElement}\r\n */\r\nexport function find(el, selector) {\r\n  return $(selector, el);\r\n}\r\n\r\n/**\r\n * Easily retrieve untyped elements\r\n * For actual type, prefer use of el.querySelectorAll\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @returns {Array<FlexibleHTMLElement>}\r\n */\r\nexport function findAll(el, selector) {\r\n  return $$(selector, el);\r\n}\r\n\r\n/**\r\n * @param {*} el\r\n * @returns {FlexibleHTMLElement}\r\n */\r\nexport function el(el) {\r\n  return el;\r\n}\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} K\r\n * @param {K} tagName\r\n * @param {HTMLElement} parent\r\n * @returns {HTMLElementTagNameMap[K]}\r\n */\r\nexport function ce(tagName, parent = null) {\r\n  const el = document.createElement(tagName);\r\n  if (parent) {\r\n    parent.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} newNode\r\n * @param {HTMLElement} existingNode\r\n */\r\nexport function insertAfter(newNode, existingNode) {\r\n  existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\r\n}\r\n", "import camelize from \"../utils/camelize.js\";\r\nimport normalizeData from \"../utils/normalizeData.js\";\r\nimport { dispatch, getAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Base element that does not contain any specific logic\r\n * related to this project but makes HTMLElemnt usable\r\n */\r\nclass BaseElement extends HTMLElement {\r\n  /**\r\n   * @param {Object} options\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n    this.options = Object.assign({}, this.defaultOptions, this.normalizedDataset, options);\r\n\r\n    this.log(\"constructor\");\r\n\r\n    this.fireEvents = true;\r\n    this._ready();\r\n\r\n    this.log(\"ready\");\r\n  }\r\n\r\n  get defaultOptions() {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   * @returns {any}\r\n   */\r\n  getOption(opt) {\r\n    return this.options[opt];\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   * @param {any} v\r\n   */\r\n  setOption(opt, v) {\r\n    setAttribute(this, `data-${opt}`, v);\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   */\r\n  toggleOption(opt) {\r\n    setAttribute(this, `data-${opt}`, !this.getOption(opt));\r\n  }\r\n\r\n  get normalizedDataset() {\r\n    let jsonConfig = this.dataset.config ? JSON.parse(this.dataset.config) : {};\r\n    let data = { ...this.dataset };\r\n    for (var key in data) {\r\n      if (key == \"config\") {\r\n        continue;\r\n      }\r\n      data[key] = normalizeData(data[key]);\r\n    }\r\n    // Once normalized, merge into json config\r\n    Object.assign(data, jsonConfig);\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @returns {String}\r\n   */\r\n  static template() {\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * This is called at the end of constructor. Extend in subclass if needed.\r\n   */\r\n  _ready() {}\r\n\r\n  /**\r\n   * @param {String|Error} message\r\n   */\r\n  log(message) {\r\n    if (this.options.debug) {\r\n      console.log(\"[\" + getAttribute(this, \"id\") + \"] \" + message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle events within the component\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    if (this[`on${event.type}`]) {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is called when connected. Extend in subclass if needed.\r\n   */\r\n  _connected() {}\r\n\r\n  connectedCallback() {\r\n    // ensure whenDefined callbacks run first\r\n    setTimeout(() => {\r\n      this.log(\"connectedCallback\");\r\n\r\n      // Append only when labels had the opportunity to be set\r\n      // Don't use shadow dom as it makes theming super hard\r\n      const template = document.createElement(\"template\");\r\n      // @ts-ignore\r\n      template.innerHTML = this.constructor.template();\r\n      this.appendChild(template.content.cloneNode(true));\r\n\r\n      this._connected();\r\n      // @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#life-cycle-events\r\n      dispatch(this, \"connected\");\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * This is called when disconnected. Extend in subclass if needed.\r\n   */\r\n  _disconnected() {}\r\n\r\n  disconnectedCallback() {\r\n    this.log(\"disconnectedCallback\");\r\n    this._disconnected();\r\n    // @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#life-cycle-events\r\n    dispatch(this, \"disconnected\");\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#a-props-like-accessor\r\n   * @returns {Object}\r\n   */\r\n  get transformAttributes() {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * This is only meant to work with data attributes\r\n   * This allows us to have properties that reflect automatically in the component\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dataset-attributes\r\n   * @param {String} attributeName\r\n   * @param {String} oldValue\r\n   * @param {String} newValue\r\n   */\r\n  attributeChangedCallback(attributeName, oldValue, newValue) {\r\n    // It didn't change\r\n    if (oldValue === newValue) {\r\n      return;\r\n    }\r\n\r\n    this.log(\"attributeChangedCallback: \" + attributeName);\r\n\r\n    let isOption = false;\r\n    const transformer = this.transformAttributes[attributeName] ?? normalizeData;\r\n\r\n    // Data attributes are mapped to options while other attributes are mapped as properties\r\n    if (attributeName.indexOf(\"data-\") === 0) {\r\n      attributeName = attributeName.slice(5);\r\n      isOption = true;\r\n    }\r\n    attributeName = camelize(attributeName);\r\n    if (isOption) {\r\n      this.options[attributeName] = transformer(newValue);\r\n    } else {\r\n      this[attributeName] = transformer(newValue);\r\n    }\r\n\r\n    // Fire internal event\r\n    if (this.fireEvents && this[`${attributeName}Changed`]) {\r\n      this[`${attributeName}Changed`]();\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseElement;\r\n", "/**\r\n * @param {HTMLSelectElement} el\r\n * @param {String} value\r\n * @param {String} label\r\n * @param {Boolean} checked\r\n */\r\nexport default function addSelectOption(el, value, label, checked = false) {\r\n  let opt = document.createElement(\"option\");\r\n  opt.value = \"\" + value;\r\n  if (checked) {\r\n    opt.selected = true;\r\n  }\r\n  opt.label = label;\r\n  el.appendChild(opt);\r\n}\r\n", "/**\r\n * @param {URL} url\r\n * @param {Object} params\r\n */\r\nexport default function appendParamsToUrl(url, params = {}) {\r\n  Object.keys(params).forEach((key) => {\r\n    if (Array.isArray(params[key])) {\r\n      // @ts-ignore\r\n      Object.keys(params[key]).forEach((k) => url.searchParams.append(isNaN(k) ? `${key}[${k}]` : key, params[key][k]));\r\n    } else {\r\n      url.searchParams.append(key, params[key]);\r\n    }\r\n  });\r\n}\r\n", "/**\r\n * Force value as arrays\r\n * @param {String|Array} v\r\n * @returns {Array}\r\n */\r\nexport default function convertArray(v) {\r\n  if (typeof v === \"string\") {\r\n    if (v[0] === \"[\") {\r\n      // \"['my', 'value']\" would fail as a json\r\n      if (v.indexOf('\"') === -1) {\r\n        v = v.replace(/'/g, '\"');\r\n      }\r\n      return JSON.parse(v);\r\n    }\r\n\r\n    return v.split(\",\");\r\n  }\r\n  if (!Array.isArray(v)) {\r\n    console.error(\"Invalid array\", v);\r\n    return [];\r\n  }\r\n  return v;\r\n}\r\n", "/**\r\n * @param {HTMLElement} el\r\n * @returns {Object}\r\n */\r\nexport default function elementOffset(el) {\r\n  var rect = el.getBoundingClientRect(),\r\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n}\r\n", "/**\r\n * Replace element within {} by their data value\r\n * @param {String} str\r\n * @param {Object} data\r\n * @returns {String}\r\n */\r\nexport default function interpolate(str, data) {\r\n  return str.replace(/\\{([^}]+)?\\}/g, function ($1, $2) {\r\n    return data[$2];\r\n  });\r\n}\r\n", "/**\r\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n * Getting computed styles only works for dom that are added in the dom\r\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n * @param {String} text The text to be rendered.\r\n * @param {Element} el Target element (defaults to body)\r\n * @param {Boolean} withPadding Include padding on element\r\n * @returns {Number}\r\n */\r\nexport default function getTextWidth(text, el = document.body, withPadding = false) {\r\n  if (!el) {\r\n    el = document.createElement(\"div\");\r\n  }\r\n  const styles = window.getComputedStyle(el);\r\n  const fontWeight = styles.getPropertyValue(\"font-weight\") || \"normal\";\r\n  const fontSize = styles.getPropertyValue(\"font-size\") || \"1rem\";\r\n  const fontFamily = styles.getPropertyValue(\"font-family\") || \"Arial\";\r\n\r\n  let padding = 0;\r\n  if (withPadding) {\r\n    const paddingLeft = styles.getPropertyValue(\"padding-left\") || \"0\";\r\n    const paddingRight = styles.getPropertyValue(\"padding-right\") || \"0\";\r\n    padding = parseInt(paddingLeft) + parseInt(paddingRight);\r\n  }\r\n\r\n  // re-use canvas object for better performance\r\n  // @ts-ignore\r\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\r\n  const context = canvas.getContext(\"2d\");\r\n  context.font = `${fontWeight} ${fontSize} ${fontFamily}`;\r\n  const metrics = context.measureText(text);\r\n  return parseInt(metrics.width) + padding;\r\n}\r\n", "/**\r\n * @param {String} prefix\r\n * @returns {String}\r\n */\r\nexport default function randstr(prefix) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .replace(\"0.\", prefix || \"\");\r\n}\r\n", "/**\r\n * Define a function that can be happily passed to addEventListener\r\n * @typedef {Function & EventListenerOrEventListenerObject} ExtendedFunction\r\n */\r\n\r\n/**\r\n * @param {Function} handler\r\n * @param {Number} timeout\r\n * @returns {ExtendedFunction}\r\n */\r\nexport default function debounce(handler, timeout = 300) {\r\n  let timer = null;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      timer = null;\r\n      handler(...args);\r\n    }, timeout);\r\n  };\r\n}\r\n", "/**\r\n * Data Grid Web component\r\n *\r\n * Credits for inspiration\r\n * @link https://github.com/riverside/zino-grid\r\n */\r\n\"use strict\";\r\n\r\nimport BaseElement from \"./core/base-element.js\";\r\nimport addSelectOption from \"./utils/addSelectOption.js\";\r\nimport appendParamsToUrl from \"./utils/appendParamsToUrl.js\";\r\nimport camelize from \"./utils/camelize.js\";\r\nimport convertArray from \"./utils/convertArray.js\";\r\nimport elementOffset from \"./utils/elementOffset.js\";\r\nimport interpolate from \"./utils/interpolate.js\";\r\nimport getTextWidth from \"./utils/getTextWidth.js\";\r\nimport randstr from \"./utils/randstr.js\";\r\nimport debounce from \"./utils/debounce.js\";\r\nimport {\r\n  dispatch,\r\n  find,\r\n  findAll,\r\n  hasClass,\r\n  removeAttribute,\r\n  getAttribute,\r\n  setAttribute,\r\n  addClass,\r\n  toggleClass,\r\n  on,\r\n  ce,\r\n} from \"./utils/shortcuts.js\";\r\n\r\n/**\r\n * Column definition\r\n * @typedef Column\r\n * @property {String} field - the key in the data\r\n * @property {String} title - the title to display in the header (defaults to \"field\" if not set)\r\n * @property {Number} [width] - the width of the column (auto otherwise)\r\n * @property {String} [class] - class to set on the column (target body or header with th.class or td.class)\r\n * @property {String} [attr] - don't render the column and set a matching attribute on the row with the value of the field\r\n * @property {Boolean} [hidden] - hide the column\r\n * @property {Boolean} [noSort] - allow disabling sort for a given column\r\n * @property {String | Function} [format] - custom data formatting\r\n * @property {String} [defaultFormatValue] - default value to use for formatting\r\n * @property {String} [transform] - custom value transformation\r\n * @property {Boolean} [editable] - replace with input (EditableColumn module)\r\n * @property {String} [editableType] - type of input (EditableColumn module)\r\n * @property {Number} [responsive] - the higher the value, the sooner it will be hidden, disable with 0 (ResponsiveGrid module)\r\n * @property {Boolean} [responsiveHidden] - hidden through responsive module (ResponsiveGrid module)\r\n * @property {String} [filterType] - defines a filter field type (\"text\" or \"select\" - defaults to \"text\")\r\n * @property {Array} [filterList] - defines a custom array to populate a filter select field in the format of [{value: \"\", text: \"\"},...]. When defined, it overrides the default behaviour where the filter select elements are populated by the unique values from the corresponding column records.\r\n * @property {Object} [firstFilterOption] - defines an object for the first option element of the filter select field. defaults to {value: \"\", text: \"\"}\r\n */\r\n\r\n/**\r\n * Row action\r\n * @typedef Action\r\n * @property {String} title - the title of the button\r\n * @property {String} name - the name of the action\r\n * @property {String} class - the class for the button\r\n * @property {String} url - link for the action\r\n * @property {String} html - custom button data\r\n * @property {Boolean} [confirm] - needs confirmation\r\n * @property {Boolean} default - is the default row action\r\n */\r\n\r\n/** @typedef {import('./plugins/autosize-column').default} AutosizeColumn */\r\n/** @typedef {import('./plugins/column-resizer').default} ColumnResizer */\r\n/** @typedef {import('./plugins/context-menu').default} ContextMenu */\r\n/** @typedef {import('./plugins/draggable-headers').default} DraggableHeaders */\r\n/** @typedef {import('./plugins/editable-column').default} EditableColumn */\r\n/** @typedef {import('./plugins/fixed-height').default} FixedHeight */\r\n/** @typedef {import('./plugins/responsive-grid').default} ResponsiveGrid */\r\n/** @typedef {import('./plugins/row-actions').default} RowActions */\r\n/** @typedef {import('./plugins/selectable-rows').default} SelectableRows */\r\n/** @typedef {import('./plugins/touch-support').default} TouchSupport */\r\n/** @typedef {import('./plugins/spinner-support').default} SpinnerSupport */\r\n\r\n/**\r\n * These plugins are all optional\r\n * @typedef {Object} Plugins\r\n * @property {ColumnResizer} [ColumnResizer] resize handlers in the headers\r\n * @property {ContextMenu} [ContextMenu] menu to show/hide columns\r\n * @property {DraggableHeaders} [DraggableHeaders] draggable headers columns\r\n * @property {EditableColumn} [EditableColumn] draggable headers columns\r\n * @property {TouchSupport} [TouchSupport] touch swipe\r\n * @property {SelectableRows} [SelectableRows] create a column with checkboxes to select rows\r\n * @property {FixedHeight} [FixedHeight] allows having fixed height tables\r\n * @property {AutosizeColumn} [AutosizeColumn] compute ideal width based on column content\r\n * @property {ResponsiveGrid} [ResponsiveGrid] hide/show column on the fly\r\n * @property {RowActions} [RowActions] add action on rows\r\n * @property {SpinnerSupport} [SpinnerSupport] inserts a spinning icon element to indicate grid loading.\r\n */\r\n\r\n/**\r\n * Parameters to pass along or receive from the server\r\n * @typedef ServerParams\r\n * @property {String} serverParams.start\r\n * @property {String} serverParams.length\r\n * @property {String} serverParams.search\r\n * @property {String} serverParams.sort\r\n * @property {String} serverParams.sortDir\r\n * @property {String} serverParams.dataKey\r\n * @property {String} serverParams.metaKey\r\n * @property {String} serverParams.metaTotalKey\r\n * @property {String} serverParams.metaFilteredKey\r\n * @property {String} serverParams.optionsKey\r\n * @property {String} serverParams.paramsKey\r\n */\r\n\r\n/**\r\n * Available data grid options, plugins included\r\n * @typedef Options\r\n * @property {?String} id Custom id for the grid\r\n * @property {?String} url An URL with data to display in JSON format\r\n * @property {Boolean} debug Log actions in DevTools console\r\n * @property {Boolean} filter Allows a filtering functionality\r\n * @property {Boolean} sort Allows a sort by column functionality\r\n * @property {String} defaultSort Default sort field if sorting is enabled\r\n * @property {Boolean} server Is a server side powered grid\r\n * @property {ServerParams} serverParams Describe keys passed to the server backend\r\n * @property {String} dir Dir\r\n * @property {Array} perPageValues Available per page options\r\n * @property {Boolean} hidePerPage Hides the page size select element\r\n * @property {Column[]} columns Available columns\r\n * @property {Number} defaultPage Starting page\r\n * @property {Number} perPage Number of records displayed per page (page size)\r\n * @property {Boolean} expand  Allow cell content to spawn over multiple lines\r\n * @property {Action[]} actions Row actions (RowActions module)\r\n * @property {Boolean} collapseActions Group actions (RowActions module)\r\n * @property {Boolean} resizable Make columns resizable (ColumnResizer module)\r\n * @property {Boolean} selectable Allow selecting rows with a checkbox (SelectableRows module)\r\n * @property {Boolean} selectVisibleOnly Select all only selects visible rows (SelectableRows module)\r\n * @property {Boolean} autosize Compute column sizes based on given data (Autosize module)\r\n * @property {Boolean} autoheight Adjust height so that it matches table size (FixedHeight module)\r\n * @property {Boolean} autohidePager auto-hides the pager when number of records falls below the selected page size\r\n * @property {Boolean} menu Right click menu on column headers (ContextMenu module)\r\n * @property {Boolean} reorder Allows a column reordering functionality (DraggableHeaders module)\r\n * @property {Boolean} responsive Change display mode on small screens (ResponsiveGrid module)\r\n * @property {Boolean} responsiveToggle Show toggle column (ResponsiveGrid module)\r\n * @property {Boolean} filterOnEnter Toggles the ability to filter column data by pressing the Enter or Return key \r\n * @property {String} spinnerClass Sets a space-delimited string of css classes for a spinner (use spinner-border css class for bootstrap 5 spinner)\r\n * @property {Number} filterKeypressDelay Sets a keypress delay time in milliseconds before triggering filter operation.\r\n */\r\n\r\n/**\r\n * Available labels that can be translated\r\n * @typedef Labels\r\n * @property {String} itemsPerPage\r\n * @property {String} gotoPage\r\n * @property {String} gotoFirstPage\r\n * @property {String} gotoPrevPage\r\n * @property {String} gotoNextPage\r\n * @property {String} gotoLastPage\r\n * @property {String} of\r\n * @property {String} items\r\n * @property {String} resizeColumn\r\n * @property {String} noData\r\n * @property {String} areYouSure\r\n * @property {String} networkError\r\n */\r\n\r\n/**\r\n * List of registered plugins\r\n * @type {Plugins}\r\n */\r\nlet plugins = {};\r\n\r\n/**\r\n * @type {Labels}\r\n */\r\nlet labels = {\r\n  itemsPerPage: \"Items per page\",\r\n  gotoPage: \"Go to page\",\r\n  gotoFirstPage: \"Go to first page\",\r\n  gotoPrevPage: \"Go to previous page\",\r\n  gotoNextPage: \"Go to next page\",\r\n  gotoLastPage: \"Go to last page\",\r\n  of: \"of\",\r\n  items: \"items\",\r\n  resizeColumn: \"Resize column\",\r\n  noData: \"No data\",\r\n  areYouSure: \"Are you sure?\",\r\n  networkError: \"Network response error\",\r\n};\r\n\r\n/**\r\n * Column definition will update some props on the html element\r\n * @param {HTMLElement} el\r\n * @param {Column} column\r\n */\r\nfunction applyColumnDefinition(el, column) {\r\n  if (column.width) {\r\n    setAttribute(el, \"width\", column.width);\r\n  }\r\n  if (column.class) {\r\n    addClass(el, column.class);\r\n  }\r\n  if (column.hidden) {\r\n    setAttribute(el, \"hidden\", \"\");\r\n    if (column.responsiveHidden) {\r\n      addClass(el, \"dg-responsive-hidden\");\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n */\r\nclass DataGrid extends BaseElement {\r\n  #filterSelector = \"[id^=dg-filter]\";\r\n  #excludedKeys = [\r\n    37, 39, 38, 40, 45, 36, 35, 33, 34, 27, 20, 16, 17, 91, 92, 18, 93, 144, 231,\r\n    \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\",\r\n    \"Insert\", \"Home\", \"End\", \"PageUp\", \"PageDown\",\r\n    \"Escape\", \"CapsLock\", \"Shift\", \"Control\", \"Meta\", \"Alt\", \"ContextMenu\", \"NumLock\", \"Unidentified\"\r\n  ];\r\n\r\n  _ready() {\r\n    setAttribute(this, \"id\", this.options.id ?? randstr(\"el-\"), true);\r\n\r\n    /**\r\n     * The grid displays that data\r\n     * @type {Array}\r\n     */\r\n    this.data = [];\r\n    /**\r\n     * We store the original data in this\r\n     * @type {Array}\r\n     */\r\n    this.originalData; // declared uninitialized to allow data preloading before fetch.\r\n\r\n    // Make the IDE happy\r\n    /**\r\n     * @type {Options}\r\n     */\r\n    this.options = this.options || this.defaultOptions;\r\n\r\n    // Init values\r\n    this.fireEvents = false;\r\n    this.page = this.options.defaultPage || 1;\r\n    this.pages = 0;\r\n    this.meta; // declared uninitialized to allow data preloading before fetch.\r\n    /**\r\n     * @type {Plugins}\r\n     */\r\n    this.plugins = {};\r\n    // Init plugins\r\n    for (const [pluginName, pluginClass] of Object.entries(plugins)) {\r\n      // @ts-ignore until we can set typeof import ...\r\n      this.plugins[pluginName] = new pluginClass(this);\r\n    }\r\n\r\n    // Expose options as observed attributes in the dom\r\n    // Do it when fireEvents is disabled to avoid firing change callbacks\r\n    for (const attr of DataGrid.observedAttributes) {\r\n      if (attr.indexOf(\"data-\") === 0) {\r\n        setAttribute(this, attr, this.options[camelize(attr.slice(5))]);\r\n      }\r\n    }\r\n\r\n    // Inserts spinner\r\n    if (this.options.spinnerClass && this.plugins.SpinnerSupport)\r\n      this.plugins.SpinnerSupport.add();\r\n  }\r\n\r\n  static template() {\r\n    return `\r\n<table role=\"grid\" >\r\n    <thead role=\"rowgroup\">\r\n        <tr role=\"row\" aria-rowindex=\"1\" class=\"dg-head-columns\"><th><!-- keep for getTextWidth --></th></tr>\r\n        <tr role=\"row\" aria-rowindex=\"2\" class=\"dg-head-filters\"></tr>\r\n    </thead>\r\n    <tbody role=\"rowgroup\" data-empty=\"${labels.noData}\"></tbody>\r\n    <tfoot role=\"rowgroup\" hidden>\r\n        <tr role=\"row\" aria-rowindex=\"1\">\r\n            <td role=\"gridcell\">\r\n            <div class=\"dg-footer\">\r\n                <div class=\"dg-page-nav\">\r\n                  <select class=\"dg-select-per-page\" aria-label=\"${labels.itemsPerPage}\"></select>\r\n                </div>\r\n                <div class=\"dg-pagination\">\r\n                  <button type=\"button\" class=\"dg-btn-first dg-rotate\" title=\"${labels.gotoFirstPage}\" aria-label=\"${labels.gotoFirstPage}\" disabled>\r\n                    <i class=\"dg-skip-icon\"></i>\r\n                  </button>\r\n                  <button type=\"button\" class=\"dg-btn-prev dg-rotate\" title=\"${labels.gotoPrevPage}\" aria-label=\"${labels.gotoPrevPage}\" disabled>\r\n                    <i class=\"dg-nav-icon\"></i>\r\n                  </button>\r\n                  <input type=\"number\" class=\"dg-input-page\" min=\"1\" step=\"1\" value=\"1\" aria-label=\"${labels.gotoPage}\">\r\n                  <button type=\"button\" class=\"dg-btn-next\" title=\"${labels.gotoNextPage}\" aria-label=\"${labels.gotoNextPage}\" disabled>\r\n                    <i class=\"dg-nav-icon\"></i>\r\n                  </button>\r\n                  <button type=\"button\" class=\"dg-btn-last\" title=\"${labels.gotoLastPage}\" aria-label=\"${labels.gotoLastPage}\" disabled>\r\n                    <i class=\"dg-skip-icon\"></i>\r\n                  </button>\r\n                </div>\r\n                <div class=\"dg-meta\">\r\n                  <span class=\"dg-low\">0</span> - <span class=\"dg-high\">0</span> ${labels.of} <span class=\"dg-total\">0</span> ${labels.items}\r\n                </div>\r\n            </div>\r\n            </td>\r\n        </tr>\r\n    </tfoot>\r\n    <ul class=\"dg-menu\" hidden></ul>\r\n</table>\r\n`;\r\n  }\r\n\r\n  /**\r\n   * @returns {Labels}\r\n   */\r\n  get labels() {\r\n    return labels;\r\n  }\r\n\r\n  /**\r\n   * @returns {Labels}\r\n   */\r\n  static getLabels() {\r\n    return labels;\r\n  }\r\n\r\n  /**\r\n   * @param {Object} v\r\n   */\r\n  static setLabels(v) {\r\n    labels = Object.assign(labels, v);\r\n  }\r\n\r\n  /**\r\n   * @returns {Column}\r\n   */\r\n  get defaultColumn() {\r\n    return {\r\n      field: \"\",\r\n      title: \"\",\r\n      width: 0,\r\n      class: \"\",\r\n      attr: \"\",\r\n      hidden: false,\r\n      editable: false,\r\n      noSort: false,\r\n      responsive: 1,\r\n      responsiveHidden: false,\r\n      format: \"\",\r\n      transform: \"\",\r\n      filterType: \"text\",\r\n      firstFilterOption: { value: \"\", text: \"\" }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @returns {Options}\r\n   */\r\n  get defaultOptions() {\r\n    return {\r\n      id: null,\r\n      url: null,\r\n      perPage: 10,\r\n      debug: false,\r\n      filter: false,\r\n      menu: false,\r\n      sort: false,\r\n      server: false,\r\n      serverParams: {\r\n        start: \"start\",\r\n        length: \"length\",\r\n        search: \"search\",\r\n        sort: \"sort\",\r\n        sortDir: \"sortDir\",\r\n        dataKey: \"data\",\r\n        metaKey: \"meta\",\r\n        metaTotalKey: \"total\",\r\n        metaFilteredKey: \"filtered\",\r\n        optionsKey: \"options\",\r\n        paramsKey: \"params\",\r\n      },\r\n      defaultSort: \"\",\r\n      reorder: false,\r\n      dir: \"ltr\",\r\n      perPageValues: [10, 25, 50, 100, 250],\r\n      hidePerPage: false,\r\n      columns: [],\r\n      actions: [],\r\n      collapseActions: false,\r\n      selectable: false,\r\n      selectVisibleOnly: true,\r\n      defaultPage: 1,\r\n      resizable: false,\r\n      autosize: true,\r\n      expand: false,\r\n      autoheight: true,\r\n      autohidePager: false,\r\n      responsive: false,\r\n      responsiveToggle: true,\r\n      filterOnEnter: true,\r\n      filterKeypressDelay: 500\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {Plugins} list\r\n   */\r\n  static registerPlugins(list) {\r\n    plugins = list;\r\n  }\r\n\r\n  /**\r\n   * @param {String} plugin\r\n   */\r\n  static unregisterPlugins(plugin = null) {\r\n    if (plugin === null) {\r\n      plugins = {};\r\n    } else {\r\n      delete plugins[plugin];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Plugins}\r\n   */\r\n  static registeredPlugins() {\r\n    return plugins;\r\n  }\r\n\r\n  /**\r\n   * @param {Object|Array} columns\r\n   * @returns {Column[]}\r\n   */\r\n  convertColumns(columns) {\r\n    let cols = [];\r\n    // Convert key:value objects to actual columns\r\n    if (typeof columns === \"object\" && !Array.isArray(columns)) {\r\n      Object.keys(columns).forEach((key) => {\r\n        let col = Object.assign({}, this.defaultColumn);\r\n        col.title = columns[key];\r\n        col.field = key;\r\n        cols.push(col);\r\n      });\r\n    } else {\r\n      columns.forEach((item) => {\r\n        let col = Object.assign({}, this.defaultColumn);\r\n        if (typeof item === \"string\") {\r\n          col.title = item;\r\n          col.field = item;\r\n        } else if (typeof item === \"object\") {\r\n          col = Object.assign(col, item);\r\n          if (!col.field) {\r\n            console.error(\"Invalid column definition\", item);\r\n          }\r\n          if (!col.title) {\r\n            col.title = col.field;\r\n          }\r\n        } else {\r\n          console.error(\"Column definition must be a string or an object\");\r\n        }\r\n        cols.push(col);\r\n      });\r\n    }\r\n    return cols;\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dom-attributes\r\n   * @returns {Array}\r\n   */\r\n  static get observedAttributes() {\r\n    return [\r\n      \"page\",\r\n      \"data-filter\",\r\n      \"data-sort\",\r\n      \"data-debug\",\r\n      \"data-reorder\",\r\n      \"data-menu\",\r\n      \"data-selectable\",\r\n      \"data-url\",\r\n      \"data-per-page\",\r\n      \"data-responsive\",\r\n    ];\r\n  }\r\n\r\n  get transformAttributes() {\r\n    return {\r\n      columns: (v) => this.convertColumns(convertArray(v)),\r\n      actions: (v) => convertArray(v),\r\n      defaultPage: (v) => parseInt(v),\r\n      perPage: (v) => parseInt(v),\r\n    };\r\n  }\r\n\r\n  get page() {\r\n    return parseInt(this.getAttribute(\"page\"));\r\n  }\r\n\r\n  set page(val) {\r\n    setAttribute(this, \"page\", this.constrainPageValue(val));\r\n  }\r\n\r\n  urlChanged() {\r\n    this.loadData().then(() => {\r\n      this.configureUi();\r\n    });\r\n  }\r\n\r\n  constrainPageValue(v) {\r\n    if (this.pages < v) {\r\n      v = this.pages;\r\n    }\r\n    if (v < 1 || !v) {\r\n      v = 1;\r\n    }\r\n    return v;\r\n  }\r\n\r\n  fixPage() {\r\n    this.pages = this.totalPages();\r\n    this.page = this.constrainPageValue(this.page);\r\n\r\n    // Show current page in input\r\n    setAttribute(this.inputPage, \"max\", this.pages);\r\n    this.inputPage.value = \"\" + this.page;\r\n    this.inputPage.disabled = this.pages < 2;\r\n  }\r\n\r\n  pageChanged() {\r\n    this.reload();\r\n  }\r\n\r\n  responsiveChanged() {\r\n    if (!this.plugins.ResponsiveGrid) {\r\n      return;\r\n    }\r\n    if (this.options.responsive) {\r\n      this.plugins.ResponsiveGrid.observe();\r\n    } else {\r\n      this.plugins.ResponsiveGrid.unobserve();\r\n    }\r\n  }\r\n\r\n  menuChanged() {\r\n    this.renderHeader();\r\n  }\r\n\r\n  /**\r\n   * This is the callback for the select control\r\n   */\r\n  changePerPage() {\r\n    this.options.perPage = parseInt(this.selectPerPage.options[this.selectPerPage.selectedIndex].value);\r\n    this.perPageChanged();\r\n  }\r\n\r\n  /**\r\n   * This is the actual event triggered on attribute change\r\n   */\r\n  perPageChanged() {\r\n    // Refresh UI\r\n    if (this.options.perPage !== parseInt(this.selectPerPage.options[this.selectPerPage.selectedIndex].value)) {\r\n      this.perPageValuesChanged();\r\n    }\r\n    // Make sure current page is still valid\r\n    let updatePage = this.page;\r\n    while (updatePage > 1 && this.page * this.options.perPage > this.totalRecords()) {\r\n      updatePage--;\r\n    }\r\n    if (updatePage != this.page) {\r\n      // Triggers pageChanged, which will trigger reload\r\n      this.page = updatePage;\r\n    } else {\r\n      // Simply reload current page\r\n      this.reload(() => {\r\n        // Preserve distance between top of page and select control if no fixed height\r\n        if (!this.plugins.FixedHeight || !this.plugins.FixedHeight.hasFixedHeight) {\r\n          this.selectPerPage.scrollIntoView();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  dirChanged() {\r\n    setAttribute(this, \"dir\", this.options.dir);\r\n  }\r\n\r\n  defaultSortChanged() {\r\n    this.sortChanged();\r\n  }\r\n\r\n  /**\r\n   * Populate the select dropdown according to options\r\n   */\r\n  perPageValuesChanged() {\r\n    if (!this.selectPerPage) {\r\n      return;\r\n    }\r\n    while (this.selectPerPage.lastChild) {\r\n      this.selectPerPage.removeChild(this.selectPerPage.lastChild);\r\n    }\r\n    this.options.perPageValues.forEach((v) => {\r\n      addSelectOption(this.selectPerPage, v, v, v === this.options.perPage);\r\n    });\r\n  }\r\n\r\n  _connected() {\r\n    /**\r\n     * @type {HTMLTableElement}\r\n     */\r\n    this.table = this.querySelector(\"table\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnFirst = this.querySelector(\".dg-btn-first\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnPrev = this.querySelector(\".dg-btn-prev\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnNext = this.querySelector(\".dg-btn-next\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnLast = this.querySelector(\".dg-btn-last\");\r\n    /**\r\n     * @type {HTMLSelectElement}\r\n     */\r\n    this.selectPerPage = this.querySelector(\".dg-select-per-page\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.inputPage = this.querySelector(\".dg-input-page\");\r\n\r\n    this.getFirst = this.getFirst.bind(this);\r\n    this.getPrev = this.getPrev.bind(this);\r\n    this.getNext = this.getNext.bind(this);\r\n    this.getLast = this.getLast.bind(this);\r\n    this.changePerPage = this.changePerPage.bind(this);\r\n    this.gotoPage = this.gotoPage.bind(this);\r\n\r\n    this.btnFirst.addEventListener(\"click\", this.getFirst);\r\n    this.btnPrev.addEventListener(\"click\", this.getPrev);\r\n    this.btnNext.addEventListener(\"click\", this.getNext);\r\n    this.btnLast.addEventListener(\"click\", this.getLast);\r\n    this.selectPerPage.addEventListener(\"change\", this.changePerPage);\r\n    this.selectPerPage.toggleAttribute(\"hidden\", this.options.hidePerPage);\r\n    this.inputPage.addEventListener(\"input\", this.gotoPage);\r\n\r\n    Object.values(this.plugins).forEach((plugin) => {\r\n      plugin.connected();\r\n    });\r\n\r\n    // Display even if we don't have data\r\n    this.dirChanged();\r\n    this.perPageValuesChanged();\r\n\r\n    // @ts-ignore\r\n    this.loadData().finally(() => {\r\n      this.configureUi();\r\n\r\n      this.sortChanged();\r\n      this.classList.add(\"dg-initialized\"); //acts as a flag to prevent unnecessary server calls down the chain.\r\n\r\n      this.filterChanged();\r\n      this.reorderChanged();\r\n\r\n      this.dirChanged();\r\n      this.perPageValuesChanged();\r\n      this.pageChanged();\r\n\r\n      this.fireEvents = true; // We can now fire attributeChangedCallback events\r\n\r\n      this.log(\"initialized\");\r\n    });\r\n  }\r\n\r\n  _disconnected() {\r\n    this.btnFirst.removeEventListener(\"click\", this.getFirst);\r\n    this.btnPrev.removeEventListener(\"click\", this.getPrev);\r\n    this.btnNext.removeEventListener(\"click\", this.getNext);\r\n    this.btnLast.removeEventListener(\"click\", this.getLast);\r\n    this.selectPerPage.removeEventListener(\"change\", this.changePerPage);\r\n    this.inputPage.removeEventListener(\"input\", this.gotoPage);\r\n\r\n    Object.values(this.plugins).forEach((plugin) => {\r\n      plugin.disconnected();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {string} field\r\n   * @returns {Column}\r\n   */\r\n  getCol(field) {\r\n    let found = null;\r\n    this.options.columns.forEach((col) => {\r\n      if (col.field == field) {\r\n        found = col;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n\r\n  getColProp(field, prop) {\r\n    const c = this.getCol(field);\r\n    return c ? c[prop] : null;\r\n  }\r\n\r\n  setColProp(field, prop, val) {\r\n    const c = this.getCol(field);\r\n    if (c) {\r\n      c[prop] = val;\r\n    }\r\n  }\r\n\r\n  visibleColumns() {\r\n    return this.options.columns.filter((col) => {\r\n      return !col.hidden;\r\n    });\r\n  }\r\n\r\n  hiddenColumns() {\r\n    return this.options.columns.filter((col) => {\r\n      return col.hidden === true;\r\n    });\r\n  }\r\n\r\n  showColumn(field, render = true) {\r\n    this.setColProp(field, \"hidden\", false);\r\n\r\n    // We need to render the whole table otherwise layout fixed won't do its job\r\n    if (render) this.renderTable();\r\n\r\n    dispatch(this, \"columnVisibility\", {\r\n      col: field,\r\n      visibility: \"visible\",\r\n    });\r\n  }\r\n\r\n  hideColumn(field, render = true) {\r\n    this.setColProp(field, \"hidden\", true);\r\n\r\n    // We need to render the whole table otherwise layout fixed won't do its job\r\n    if (render) this.renderTable();\r\n\r\n    dispatch(this, \"columnVisibility\", {\r\n      col: field,\r\n      visibility: \"hidden\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the starting index of actual data\r\n   * @returns {Number}\r\n   */\r\n  startColIndex() {\r\n    let start = 1;\r\n    if (this.options.selectable && this.plugins.SelectableRows) {\r\n      start++;\r\n    }\r\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\r\n      start++;\r\n    }\r\n    return start;\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isSticky() {\r\n    return this.hasAttribute(\"sticky\");\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} visibleOnly\r\n   * @returns {Number}\r\n   */\r\n  columnsLength(visibleOnly = false) {\r\n    let len = 0;\r\n    // One column per (visible) column\r\n    this.options.columns.forEach((col) => {\r\n      if (visibleOnly && col.hidden) {\r\n        return;\r\n      }\r\n      if (!col.attr) {\r\n        len++;\r\n      }\r\n    });\r\n    // Add one col for selectable checkbox at the beginning\r\n    if (this.options.selectable && this.plugins.SelectableRows) {\r\n      len++;\r\n    }\r\n    // Add one col for actions at the end\r\n    if (this.options.actions.length && this.plugins.RowActions) {\r\n      len++;\r\n    }\r\n    // Add one col for the responsive toggle\r\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\r\n      len++;\r\n    }\r\n    return len;\r\n  }\r\n\r\n  /**\r\n   * Global configuration and renderTable\r\n   * This should be called after your data has been loaded\r\n   */\r\n  configureUi() {\r\n    setAttribute(this.querySelector(\"table\"), \"aria-rowcount\", this.data.length);\r\n\r\n    this.table.style.visibility = \"hidden\";\r\n    this.renderTable();\r\n    if (this.options.responsive && this.plugins.ResponsiveGrid) {\r\n      // Let the observer make the table visible\r\n    } else {\r\n      this.table.style.visibility = \"visible\";\r\n    }\r\n\r\n    // Store row height for later usage\r\n    if (!this.rowHeight) {\r\n      const tr = find(this, \"tbody tr\") || find(this, \"table tr\");\r\n      if (tr) {\r\n        this.rowHeight = tr.offsetHeight;\r\n      }\r\n    }\r\n  }\r\n\r\n  filterChanged() {\r\n    const row = this.querySelector(\"thead tr.dg-head-filters\");\r\n    if (this.options.filter) {\r\n      removeAttribute(row, \"hidden\");\r\n    } else {\r\n      this.clearFilters();\r\n      setAttribute(row, \"hidden\", \"\");\r\n    }\r\n  }\r\n\r\n  reorderChanged() {\r\n    const headers = findAll(this, \"thead tr.dg-head-columns th\");\r\n    headers.forEach((th) => {\r\n      if (th.classList.contains(\"dg-selectable\") || th.classList.contains(\"dg-actions\")) {\r\n        return;\r\n      }\r\n      if (this.options.reorder && this.plugins.DraggableHeaders) {\r\n        th.draggable = true;\r\n      } else {\r\n        th.removeAttribute(\"draggable\");\r\n      }\r\n    });\r\n  }\r\n\r\n  sortChanged() {\r\n    this.log(\"toggle sort\");\r\n\r\n    this.querySelectorAll(\"thead tr.dg-head-columns th\").forEach((th) => {\r\n      const fieldName = th.getAttribute(\"field\");\r\n      if (th.classList.contains(\"dg-not-sortable\") || (!this.fireEvents && fieldName == this.options.defaultSort)) {\r\n        return;\r\n      }\r\n      if (this.options.sort && !this.getColProp(fieldName, \"noSort\")) {\r\n        setAttribute(th, \"aria-sort\", \"none\");\r\n      } else {\r\n        removeAttribute(th, \"aria-sort\");\r\n      }\r\n    });\r\n  }\r\n\r\n  selectableChanged() {\r\n    this.renderTable();\r\n  }\r\n\r\n  addRow(row) {\r\n    if (!Array.isArray(this.originalData)) return;\r\n    this.log(\"Add row\");\r\n    this.originalData.push(row);\r\n    this.data = this.originalData.slice();\r\n    this.sortData();\r\n  }\r\n\r\n  /**\r\n   * @param {any} value Value to remove. Defaults to last row.\r\n   * @param {String} key The key of the item to remove. Defaults to first column\r\n   */\r\n  removeRow(value = null, key = null) {\r\n    if (!Array.isArray(this.originalData)) return;\r\n    if (key === null) {\r\n      key = this.options.columns[0][\"field\"];\r\n    }\r\n    if (value === null) {\r\n      value = this.originalData[this.originalData.length - 1][key];\r\n    }\r\n    this.log(\"Removing \" + key + \":\" + value);\r\n    for (let i = 0; i < this.originalData.length; i++) {\r\n      if (this.originalData[i][key] === value) {\r\n        this.originalData.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.data = this.originalData.slice();\r\n    this.sortData();\r\n  }\r\n\r\n  /**\r\n   * @param {String} key Return a specific key (eg: id) instead of the whole row\r\n   * @returns {Array}\r\n   */\r\n  getSelection(key = null) {\r\n    if (!this.plugins.SelectableRows) {\r\n      return [];\r\n    }\r\n    return this.plugins.SelectableRows.getSelection(key);\r\n  }\r\n\r\n  getData() {\r\n    return this.originalData;\r\n  }\r\n\r\n  clearData() {\r\n    // Already empty\r\n    if (this.data.length === 0) {\r\n      return;\r\n    }\r\n    this.data = this.originalData = [];\r\n    this.renderBody();\r\n  }\r\n\r\n  /**\r\n   * Preloads the data intended to bypass the initial fetch operation, allowing for faster intial page load time.\r\n   * Subsequent grid actions after initialization will operate as normal.\r\n   * @param {Object} data - an object with meta ({total, filtered, start}) and data (array of objects) properties.\r\n   */\r\n  preload(data) {\r\n    const metaKey = this.options.serverParams.metaKey,\r\n      dataKey = this.options.serverParams.dataKey;\r\n    if (data?.[metaKey]) this.meta = data[metaKey];\r\n    if (data?.[dataKey]) this.data = this.originalData = data[dataKey];\r\n  }\r\n\r\n  refresh(cb = null) {\r\n    this.data = this.originalData = [];\r\n    return this.reload(cb);\r\n  }\r\n\r\n  reload(cb = null) {\r\n    this.log(\"reload\");\r\n\r\n    // If the data was cleared, we need to render again\r\n    const needRender = !this.originalData?.length;\r\n    this.fixPage();\r\n    // @ts-ignore\r\n    this.loadData().finally(() => {\r\n      // If we load data from the server, we redraw the table body\r\n      // Otherwise, we just need to paginate\r\n      this.options.server || needRender ? this.renderBody() : this.paginate();\r\n      if (cb) {\r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise}\r\n   */\r\n  loadData() {\r\n    const flagEmpty = () => !this.data.length && this.classList.add(\"dg-empty\"),\r\n      tbody = this.querySelector(\"tbody\");\r\n    // We already have some data\r\n    if (this.meta || this.originalData || this.classList.contains(\"dg-initialized\")) {\r\n      // We don't use server side data\r\n      if (!this.options.server || (this.options.server && !this.fireEvents)) {\r\n        this.log(\"skip loadData\");\r\n        flagEmpty();\r\n        return new Promise((resolve) => {\r\n          resolve();\r\n        });\r\n      }\r\n    }\r\n    this.log(\"loadData\");\r\n    this.loading = true;\r\n    this.classList.add(\"dg-loading\");\r\n    this.classList.remove(\"dg-empty\", \"dg-network-error\");\r\n    return (\r\n      this.fetchData()\r\n        .then((response) => {\r\n          // We can get a straight array or an object\r\n          if (Array.isArray(response)) {\r\n            this.data = response;\r\n          } else {\r\n            // Object must contain data key\r\n            if (!response[this.options.serverParams.dataKey]) {\r\n              console.error(\"Invalid response, it should contain a data key with an array or be a plain array\", response);\r\n              this.options.url = null;\r\n              return;\r\n            }\r\n\r\n            // We may have a config object\r\n            this.options = Object.assign(this.options, response[this.options.serverParams.optionsKey] ?? {});\r\n            // It should return meta data (see metaFilteredKey)\r\n            this.meta = response[this.options.serverParams.metaKey] ?? {};\r\n            this.data = response[this.options.serverParams.dataKey];\r\n          }\r\n          this.originalData = this.data.slice();\r\n          this.fixPage();\r\n\r\n          // Make sure we have a proper set of columns\r\n          if (this.options.columns.length === 0 && this.originalData.length) {\r\n            this.options.columns = this.convertColumns(Object.keys(this.originalData[0]));\r\n          } else {\r\n            this.options.columns = this.convertColumns(this.options.columns);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.log(err);\r\n          if (err.message) {\r\n            tbody.setAttribute(\"data-empty\", err.message.replace(/^\\s+|\\r\\n|\\n|\\r$/g, \"\"));\r\n          }\r\n          this.classList.add(\"dg-empty\", \"dg-network-error\");\r\n        })\r\n        // @ts-ignore\r\n        .finally(() => {\r\n          flagEmpty();\r\n          if (!this.classList.contains(\"dg-network-error\") && tbody.getAttribute(\"data-empty\") != this.labels.noData) {\r\n            tbody.setAttribute(\"data-empty\", this.labels.noData);\r\n          }\r\n          this.classList.remove(\"dg-loading\");\r\n          this.loading = false;\r\n        })\r\n    );\r\n  }\r\n\r\n  getFirst() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = 1;\r\n  }\r\n\r\n  getLast() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.pages;\r\n  }\r\n\r\n  getPrev() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  getNext() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  gotoPage(event) {\r\n    if (event.type === \"keypress\") {\r\n      const key = event.keyCode || event.key;\r\n      if (key === 13 || key === \"Enter\") {\r\n        event.preventDefault();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    this.page = parseInt(this.inputPage.value);\r\n  }\r\n\r\n  getSort() {\r\n    let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    if (col) {\r\n      return col.getAttribute(\"field\");\r\n    }\r\n    return this.options.defaultSort;\r\n  }\r\n\r\n  getSortDir() {\r\n    let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    if (col) {\r\n      return col.getAttribute(\"aria-sort\") || \"\";\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getFilters() {\r\n    let filters = [];\r\n    const inputs = findAll(this, this.#filterSelector);\r\n    inputs.forEach((input) => {\r\n      filters[input.dataset.name] = input.value;\r\n    });\r\n    return filters;\r\n  }\r\n\r\n  clearFilters() {\r\n    const inputs = findAll(this, this.#filterSelector);\r\n    inputs.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n    this.filterData();\r\n  }\r\n\r\n  filterData() {\r\n    this.log(\"filter data\");\r\n\r\n    this.page = 1;\r\n\r\n    if (this.options.server) {\r\n      this.reload();\r\n    } else {\r\n      this.data = this.originalData?.slice() ?? [];\r\n\r\n      // Look for rows matching the filters\r\n      const inputs = findAll(this, this.#filterSelector);\r\n      inputs.forEach((input) => {\r\n        let value = input.value;\r\n        if (value) {\r\n          let name = input.dataset.name;\r\n          this.data = this.data.filter((item) => {\r\n            let str = item[name] + \"\";\r\n            return str.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n          });\r\n        }\r\n      });\r\n      this.pageChanged();\r\n\r\n      let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n      if (this.options.sort && col) {\r\n        this.sortData();\r\n      } else {\r\n        this.renderBody();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Data will be sorted then rendered using renderBody\r\n   * @param {Element} col The column that was clicked or null to use current sort\r\n   */\r\n  sortData(col = null) {\r\n    this.log(\"sort data\");\r\n\r\n    // Early exit\r\n    if (col && this.getColProp(col.getAttribute(\"field\"), \"noSort\")) {\r\n      this.log(\"sorting prevented because column is not sortable\");\r\n      return;\r\n    }\r\n    if (this.plugins.ColumnResizer && this.plugins.ColumnResizer.isResizing) {\r\n      this.log(\"sorting prevented because resizing\");\r\n      return;\r\n    }\r\n    if (this.loading) {\r\n      this.log(\"sorting prevented because loading\");\r\n      return;\r\n    }\r\n\r\n    // We clicked on a column, update sort state\r\n    if (col !== null) {\r\n      // Remove active sort if any\r\n      const haveClasses = (c) => [\"dg-selectable\", \"dg-actions\", \"dg-responsive-toggle\"].includes(c);\r\n      this.querySelectorAll(\"thead tr:first-child th\").forEach((th) => {\r\n        // @ts-ignore\r\n        if ([...th.classList].some(haveClasses)) {\r\n          return;\r\n        }\r\n        if (th !== col) {\r\n          th.setAttribute(\"aria-sort\", \"none\");\r\n        }\r\n      });\r\n\r\n      // Set tristate col\r\n      if (!col.hasAttribute(\"aria-sort\") || col.getAttribute(\"aria-sort\") === \"none\") {\r\n        col.setAttribute(\"aria-sort\", \"ascending\");\r\n      } else if (col.getAttribute(\"aria-sort\") === \"ascending\") {\r\n        col.setAttribute(\"aria-sort\", \"descending\");\r\n      } else if (col.getAttribute(\"aria-sort\") === \"descending\") {\r\n        col.setAttribute(\"aria-sort\", \"none\");\r\n      }\r\n    } else {\r\n      // Or fetch current sort\r\n      col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    }\r\n\r\n    if (this.options.server) {\r\n      // Reload data with updated sort\r\n      this.loadData().finally(() => {\r\n        this.renderBody();\r\n      });\r\n    } else {\r\n      const sort = col ? col.getAttribute(\"aria-sort\") : \"none\";\r\n      if (sort === \"none\") {\r\n        let stack = [];\r\n\r\n        // Restore order while keeping filters\r\n        this.originalData?.some((itemA) => {\r\n          this.data.some((itemB) => {\r\n            if (JSON.stringify(itemA) === JSON.stringify(itemB)) {\r\n              stack.push(itemB);\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          return stack.length === this.data.length;\r\n        });\r\n\r\n        this.data = stack;\r\n      } else {\r\n        const field = col.getAttribute(\"field\");\r\n        this.data.sort((a, b) => {\r\n          if (!isNaN(a[field]) && !isNaN(b[field])) {\r\n            return sort === \"ascending\" ? a[field] - b[field] : b[field] - a[field];\r\n          }\r\n          const valA = sort === \"ascending\" ? a[field].toUpperCase() : b[field].toUpperCase();\r\n          const valB = sort === \"ascending\" ? b[field].toUpperCase() : a[field].toUpperCase();\r\n\r\n          switch (true) {\r\n            case valA > valB:\r\n              return 1;\r\n            case valA < valB:\r\n              return -1;\r\n            case valA === valB:\r\n              return 0;\r\n          }\r\n        });\r\n      }\r\n      this.renderBody();\r\n    }\r\n  }\r\n\r\n  #sort(columnName, sortDir) {\r\n    const col = this.querySelector(`.dg-head-columns th[field=${columnName}]`),\r\n      dir = sortDir === \"ascending\" ? \"none\" : sortDir === \"descending\" ? \"ascending\" : \"descending\";\r\n    col?.setAttribute(\"aria-sort\", dir);\r\n    this.sortData(col);\r\n  }\r\n\r\n  sortAsc = (columnName) => this.#sort(columnName, \"ascending\");\r\n  sortDesc = (columnName) => this.#sort(columnName, \"descending\");\r\n  sortNone = (columnName) => this.#sort(columnName, \"none\");\r\n\r\n  fetchData() {\r\n    if (!this.options.url) {\r\n      return new Promise((resolve, reject) => reject(\"No url set\"));\r\n    }\r\n\r\n    let base = window.location.href;\r\n    // Fix trailing slash if no extension is present\r\n    if (!base.split(\"/\").pop().includes(\".\")) {\r\n      base += base.endsWith(\"/\") ? \"\" : \"/\";\r\n    }\r\n    let url = new URL(this.options.url, base);\r\n    let params = {\r\n      r: Date.now(),\r\n    };\r\n    if (this.options.server) {\r\n      // 0 based\r\n      params[this.options.serverParams.start] = this.page - 1;\r\n      params[this.options.serverParams.length] = this.options.perPage;\r\n      if (this.options.filter) params[this.options.serverParams.search] = this.getFilters();\r\n      params[this.options.serverParams.sort] = this.getSort() || \"\";\r\n      params[this.options.serverParams.sortDir] = this.getSortDir();\r\n\r\n      // extra params ?\r\n      if (this.meta?.[this.options.serverParams.paramsKey]) {\r\n        params = Object.assign(params, this.meta[this.options.serverParams.paramsKey]);\r\n      }\r\n    }\r\n\r\n    appendParamsToUrl(url, params);\r\n\r\n    return fetch(url).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText || labels.networkError);\r\n      }\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  renderTable() {\r\n    this.log(\"render table\");\r\n\r\n    if (this.options.menu && this.plugins.ContextMenu) {\r\n      this.plugins.ContextMenu.createMenu();\r\n    }\r\n\r\n    let sortedColumn;\r\n\r\n    this.renderHeader();\r\n    if (this.options.defaultSort) {\r\n      // We can have a default sort even with sort disabled\r\n      sortedColumn = this.querySelector(\"thead tr.dg-head-columns th[field='\" + this.options.defaultSort + \"']\");\r\n    }\r\n\r\n    if (sortedColumn) {\r\n      this.sortData(sortedColumn);\r\n    } else {\r\n      this.renderBody();\r\n    }\r\n\r\n    this.renderFooter();\r\n  }\r\n\r\n  /**\r\n   * Create table header\r\n   * - One row for the column headers\r\n   * - One row for the filters\r\n   */\r\n  renderHeader() {\r\n    this.log(\"render header\");\r\n\r\n    const thead = this.querySelector(\"thead\");\r\n    this.createColumnHeaders(thead);\r\n    this.createColumnFilters(thead);\r\n\r\n    if (this.options.resizable && this.plugins.ColumnResizer) {\r\n      this.plugins.ColumnResizer.renderResizer(labels.resizeColumn);\r\n    }\r\n\r\n    dispatch(this, \"headerRendered\");\r\n  }\r\n\r\n  renderFooter() {\r\n    this.log(\"render footer\");\r\n\r\n    const tfoot = this.querySelector(\"tfoot\");\r\n    const td = tfoot.querySelector(\"td\");\r\n    tfoot.removeAttribute(\"hidden\");\r\n    setAttribute(td, \"colspan\", this.columnsLength(true));\r\n    tfoot.style.display = \"\";\r\n  }\r\n\r\n  /**\r\n   * Create the column headers based on column definitions and set options\r\n   * @param {HTMLTableSectionElement} thead\r\n   */\r\n  createColumnHeaders(thead) {\r\n    // @link https://stackoverflow.com/questions/21064101/understanding-offsetwidth-clientwidth-scrollwidth-and-height-respectively\r\n    const availableWidth = this.clientWidth;\r\n    const colMaxWidth = Math.round((availableWidth / this.columnsLength(true)) * 2);\r\n\r\n    let idx = 0;\r\n    let tr;\r\n\r\n    // Create row\r\n    tr = ce(\"tr\");\r\n    this.headerRow = tr;\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"aria-rowindex\", \"1\");\r\n    tr.setAttribute(\"class\", \"dg-head-columns\");\r\n\r\n    // We need a real th from the dom to compute the size\r\n    let sampleTh = thead.querySelector(\"tr.dg-head-columns th\");\r\n    if (!sampleTh) {\r\n      sampleTh = ce(\"th\");\r\n      thead.querySelector(\"tr\").appendChild(sampleTh);\r\n    }\r\n\r\n    if (this.options.selectable && this.plugins.SelectableRows) {\r\n      this.plugins.SelectableRows.createHeaderCol(tr);\r\n    }\r\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\r\n      this.plugins.ResponsiveGrid.createHeaderCol(tr);\r\n    }\r\n\r\n    // Create columns\r\n    idx = 0;\r\n    let totalWidth = 0;\r\n    this.options.columns.forEach((column) => {\r\n      if (column.attr) {\r\n        return;\r\n      }\r\n      const colIdx = idx + this.startColIndex();\r\n      let th = ce(\"th\");\r\n      th.setAttribute(\"scope\", \"col\");\r\n      th.setAttribute(\"role\", \"columnheader button\");\r\n      th.setAttribute(\"aria-colindex\", \"\" + colIdx);\r\n      th.setAttribute(\"id\", randstr(\"dg-col-\"));\r\n      if (this.options.sort) {\r\n        th.setAttribute(\"aria-sort\", \"none\");\r\n      }\r\n      th.setAttribute(\"field\", column.field);\r\n      if (this.plugins.ResponsiveGrid && this.options.responsive) {\r\n        setAttribute(th, \"data-responsive\", column.responsive || \"\");\r\n      }\r\n      // Make sure the header fits (+ add some room for sort icon if necessary)\r\n      const computedWidth = getTextWidth(column.title, sampleTh, true) + 20;\r\n      th.dataset.minWidth = \"\" + computedWidth;\r\n      applyColumnDefinition(th, column);\r\n      th.tabIndex = 0;\r\n      th.textContent = column.title;\r\n\r\n      let w = 0;\r\n      // Autosize small based on first/last row ?\r\n      // Take into account minWidth of the header and max available size based on col numbers\r\n      if (this.options.autosize && this.plugins.AutosizeColumn) {\r\n        const colAvailableWidth = Math.min(availableWidth - totalWidth, colMaxWidth);\r\n        w = this.plugins.AutosizeColumn.computeSize(th, column, parseInt(th.dataset.minWidth), colAvailableWidth);\r\n      } else {\r\n        w = Math.max(parseInt(th.dataset.minWidth), parseInt(th.getAttribute(\"width\")));\r\n      }\r\n\r\n      setAttribute(th, \"width\", w);\r\n      if (column.hidden) {\r\n        th.setAttribute(\"hidden\", \"\");\r\n      } else {\r\n        totalWidth += w;\r\n      }\r\n\r\n      // Reorder columns with drag/drop\r\n      if (this.options.reorder && this.plugins.DraggableHeaders) {\r\n        this.plugins.DraggableHeaders.makeHeaderDraggable(th);\r\n      }\r\n\r\n      tr.appendChild(th);\r\n      idx++;\r\n    });\r\n\r\n    // There is too much available width, and we want to avoid fixed layout to split remaining amount\r\n    if (totalWidth < availableWidth) {\r\n      const visibleCols = findAll(tr, \"th:not([hidden],.dg-not-resizable)\");\r\n      if (visibleCols.length) {\r\n        const lastCol = visibleCols[visibleCols.length - 1];\r\n        removeAttribute(lastCol, \"width\");\r\n      }\r\n    }\r\n\r\n    // Actions\r\n    if (this.options.actions.length && this.plugins.RowActions) {\r\n      this.plugins.RowActions.makeActionHeader(tr);\r\n    }\r\n\r\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-columns\"));\r\n\r\n    // Once columns are inserted, we have an actual dom to query\r\n    if (thead.offsetWidth > availableWidth) {\r\n      this.log(`adjust width to fix size, ${thead.offsetWidth} > ${availableWidth}`);\r\n      const scrollbarWidth = this.offsetWidth - this.clientWidth;\r\n      let diff = thead.offsetWidth - availableWidth - scrollbarWidth;\r\n      if (this.options.responsive && this.plugins.ResponsiveGrid) {\r\n        diff += scrollbarWidth;\r\n      }\r\n      // Remove diff for columns that can afford it\r\n      const thWithWidth = findAll(tr, \"th[width]\");\r\n      thWithWidth.forEach((th) => {\r\n        if (hasClass(th, \"dg-not-resizable\")) {\r\n          return;\r\n        }\r\n        if (diff <= 0) {\r\n          return;\r\n        }\r\n        const actualWidth = parseInt(th.getAttribute(\"width\"));\r\n        const minWidth = th.dataset.minWidth ? parseInt(th.dataset.minWidth) : 0;\r\n        if (actualWidth > minWidth) {\r\n          let newWidth = actualWidth - diff;\r\n          if (newWidth < minWidth) {\r\n            newWidth = minWidth;\r\n          }\r\n          diff -= actualWidth - newWidth;\r\n          setAttribute(th, \"width\", newWidth);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Context menu\r\n    if (this.options.menu && this.plugins.ContextMenu) {\r\n      this.plugins.ContextMenu.attachContextMenu();\r\n    }\r\n\r\n    // Sort col on click\r\n    tr.querySelectorAll(\"[aria-sort]\").forEach((sortableRow) => {\r\n      sortableRow.addEventListener(\"click\", () => this.sortData(sortableRow));\r\n    });\r\n\r\n    setAttribute(this.querySelector(\"table\"), \"aria-colcount\", this.columnsLength(true));\r\n  }\r\n\r\n  createColumnFilters(thead) {\r\n    let idx = 0;\r\n    let tr;\r\n\r\n    // Create row for filters\r\n    tr = ce(\"tr\");\r\n    this.filterRow = tr;\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"aria-rowindex\", \"2\");\r\n    tr.setAttribute(\"class\", \"dg-head-filters\");\r\n    if (!this.options.filter) {\r\n      tr.setAttribute(\"hidden\", \"\");\r\n    }\r\n\r\n    if (this.options.selectable && this.plugins.SelectableRows) {\r\n      this.plugins.SelectableRows.createFilterCol(tr);\r\n    }\r\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\r\n      this.plugins.ResponsiveGrid.createFilterCol(tr);\r\n    }\r\n\r\n    this.options.columns.forEach((column) => {\r\n      if (column.attr) {\r\n        return;\r\n      }\r\n      const colIdx = idx + this.startColIndex();\r\n      let relatedTh = thead.querySelector(\"tr.dg-head-columns th[aria-colindex='\" + colIdx + \"']\");\r\n      if (!relatedTh) {\r\n        console.warn(\"Related th not found\", colIdx);\r\n        return;\r\n      }\r\n      let th = ce(\"th\");\r\n      th.setAttribute(\"aria-colindex\", \"\" + colIdx);\r\n\r\n      let filter = this.createFilterElement(column, relatedTh);\r\n      if (!this.options.filter) {\r\n        th.tabIndex = 0;\r\n      } else {\r\n        filter.tabIndex = 0;\r\n      }\r\n\r\n      if (column.hidden) {\r\n        th.setAttribute(\"hidden\", \"\");\r\n      }\r\n\r\n      th.appendChild(filter);\r\n      tr.appendChild(th);\r\n      idx++;\r\n    });\r\n\r\n    // Actions\r\n    if (this.options.actions.length && this.plugins.RowActions) {\r\n      this.plugins.RowActions.makeActionFilter(tr);\r\n    }\r\n\r\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-filters\"));\r\n\r\n    if (typeof this.options.filterKeypressDelay !== \"number\" || this.options.filterOnEnter)\r\n      this.options.filterKeypressDelay = 0;\r\n    \r\n    // Filter content by field events\r\n    tr.querySelectorAll(this.#filterSelector).forEach((el) => {\r\n      const eventName = /select/i.test(el.tagName) ? \"change\" : \"keyup\",\r\n        eventHandler = debounce((e) => {\r\n          const key = e.keyCode || e.key,\r\n            isKeyPressFilter = !this.options.filterOnEnter && !this.#excludedKeys.some(k => k == key);\r\n          if (key === 13 || key === \"Enter\" || isKeyPressFilter || e.type == \"change\") {\r\n            this.filterData.call(this);\r\n          }\r\n        }, this.options.filterKeypressDelay);\r\n      el.addEventListener(eventName, eventHandler);\r\n    });\r\n  }\r\n\r\n  createFilterElement(column, relatedTh) {\r\n    const isSelect = column.filterType == \"select\",\r\n      filter = isSelect ? ce(\"select\") : ce(\"input\");\r\n    if (isSelect) {\r\n      if (!Array.isArray(column.filterList)) { // Gets unique values from column records\r\n        const uniqueValues = [...new Set((this.data ?? []).map((e) => e[column.field]))].filter((v) => v).sort();\r\n        column.filterList = [column.firstFilterOption || this.defaultColumn.firstFilterOption].concat(uniqueValues.map((e) => ({ value: e, text: e })));\r\n      }\r\n      column.filterList.forEach((e) => {\r\n        const opt = ce(\"option\");\r\n        opt.value = e.value;\r\n        opt.text = e.text;\r\n        filter.add(opt);\r\n      });\r\n    } else {\r\n      filter.type = \"text\";\r\n      filter.inputMode = \"search\";\r\n      filter.autocomplete = \"off\";\r\n      filter.spellcheck = false;\r\n    }\r\n    // Allows binding filter to this column\r\n    filter.dataset.name = column.field;\r\n    filter.id = randstr(\"dg-filter-\");\r\n    // Don't use aria-label as it triggers autocomplete\r\n    filter.setAttribute(\"aria-labelledby\", relatedTh.getAttribute(\"id\"));\r\n    return filter;\r\n  }\r\n\r\n  /**\r\n   * Render the data as rows in tbody\r\n   * It will call paginate() at the end\r\n   */\r\n  renderBody() {\r\n    this.log(\"render body\");\r\n    let tr;\r\n    let td;\r\n    let idx;\r\n    let tbody = ce(\"tbody\");\r\n\r\n    this.data.forEach((item, i) => {\r\n      tr = ce(\"tr\");\r\n      setAttribute(tr, \"role\", \"row\");\r\n      setAttribute(tr, \"hidden\", \"\");\r\n      setAttribute(tr, \"aria-rowindex\", i + 1);\r\n      tr.tabIndex = 0;\r\n\r\n      if (this.options.selectable && this.plugins.SelectableRows) {\r\n        this.plugins.SelectableRows.createDataCol(tr);\r\n      }\r\n      if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\r\n        this.plugins.ResponsiveGrid.createDataCol(tr);\r\n      }\r\n\r\n      // Expandable\r\n      if (this.options.expand) {\r\n        tr.classList.add(\"dg-expandable\");\r\n\r\n        on(tr, \"click\", (ev) => {\r\n          if (this.plugins.ResponsiveGrid) {\r\n            this.plugins.ResponsiveGrid.blockObserver();\r\n          }\r\n          toggleClass(ev.currentTarget, \"dg-expanded\");\r\n          if (this.plugins.ResponsiveGrid) {\r\n            this.plugins.ResponsiveGrid.unblockObserver();\r\n          }\r\n        });\r\n      }\r\n\r\n      idx = 0;\r\n      this.options.columns.forEach((column) => {\r\n        if (!column) {\r\n          console.error(\"Empty column found!\", this.options.columns);\r\n        }\r\n        // It should be applied as an attr of the row\r\n        if (column.attr) {\r\n          if (item[column.field]) {\r\n            // Special case if we try to write over the class attr\r\n            if (column.attr === \"class\") {\r\n              addClass(tr, item[column.field]);\r\n            } else {\r\n              tr.setAttribute(column.attr, item[column.field]);\r\n            }\r\n          }\r\n          return;\r\n        }\r\n        td = ce(\"td\");\r\n        td.setAttribute(\"role\", \"gridcell\");\r\n        td.setAttribute(\"aria-colindex\", idx + this.startColIndex());\r\n        applyColumnDefinition(td, column);\r\n        // This is required for pure css responsive layout\r\n        td.setAttribute(\"data-name\", column.title);\r\n        td.tabIndex = -1;\r\n\r\n        // Inline editing ...\r\n        if (column.editable && this.plugins.EditableColumn) {\r\n          addClass(td, \"dg-editable-col\");\r\n          this.plugins.EditableColumn.makeEditableInput(td, column, item, i);\r\n        } else {\r\n          // ... or formatting\r\n          const v = item[column.field] ?? \"\";\r\n          let tv;\r\n          // TODO: make this modular\r\n          switch (column.transform) {\r\n            case \"uppercase\":\r\n              tv = v.toUpperCase();\r\n              break;\r\n            case \"lowercase\":\r\n              tv = v.toLowerCase();\r\n              break;\r\n            default:\r\n              tv = v;\r\n              break;\r\n          }\r\n          if (column.format) {\r\n            // Only use formatting with values or if defaultFormatValue is set\r\n            if (column.defaultFormatValue != undefined && (tv === \"\" || tv === null)) {\r\n              tv = column.defaultFormatValue + \"\";\r\n            }\r\n            if (typeof column.format === \"string\" && tv) {\r\n              td.innerHTML = interpolate(\r\n                // @ts-ignore\r\n                column.format,\r\n                Object.assign(\r\n                  {\r\n                    _v: v,\r\n                    _tv: tv,\r\n                  },\r\n                  item\r\n                )\r\n              );\r\n            } else if (column.format instanceof Function) {\r\n              const val = column.format.call(this, { column, rowData: item, cellData: tv, td, tr });\r\n              td.innerHTML = val || tv || v;\r\n            }\r\n          } else {\r\n            td.textContent = tv;\r\n          }\r\n        }\r\n        tr.appendChild(td);\r\n        idx++;\r\n      });\r\n\r\n      // Actions\r\n      if (this.options.actions.length && this.plugins.RowActions) {\r\n        this.plugins.RowActions.makeActionRow(tr, item);\r\n      }\r\n\r\n      tbody.appendChild(tr);\r\n    });\r\n\r\n    tbody.setAttribute(\"role\", \"rowgroup\");\r\n\r\n    // Keep data empty message\r\n    const prev = this.querySelector(\"tbody\");\r\n    tbody.setAttribute(\"data-empty\", prev.getAttribute(\"data-empty\"));\r\n    this.querySelector(\"table\").replaceChild(tbody, prev);\r\n\r\n    if (this.plugins.FixedHeight) {\r\n      this.plugins.FixedHeight.createFakeRow();\r\n    }\r\n\r\n    this.paginate();\r\n\r\n    if (this.plugins.SelectableRows) {\r\n      this.plugins.SelectableRows.shouldSelectAll(tbody);\r\n    }\r\n\r\n    this.data.length && this.classList.remove(\"dg-empty\");\r\n\r\n    dispatch(this, \"bodyRendered\");\r\n  }\r\n\r\n  paginate() {\r\n    this.log(\"paginate\");\r\n\r\n    const total = this.totalRecords();\r\n    const p = this.page || 1;\r\n\r\n    let index;\r\n    let high = p * this.options.perPage;\r\n    let low = high - this.options.perPage + 1;\r\n    const tbody = this.querySelector(\"tbody\");\r\n    const tfoot = this.querySelector(\"tfoot\");\r\n\r\n    if (high > total) {\r\n      high = total;\r\n    }\r\n    if (!total) {\r\n      low = 0;\r\n    }\r\n\r\n    // Display all rows within the set indexes\r\n    // For server side paginated grids, we display everything\r\n    // since the server is taking care of actual pagination\r\n    tbody.querySelectorAll(\"tr\").forEach((tr) => {\r\n      if (this.options.server) {\r\n        removeAttribute(tr, \"hidden\");\r\n        return;\r\n      }\r\n      index = Number(getAttribute(tr, \"aria-rowindex\"));\r\n      if (index > high || index < low) {\r\n        setAttribute(tr, \"hidden\", \"\");\r\n      } else {\r\n        removeAttribute(tr, \"hidden\");\r\n      }\r\n    });\r\n\r\n    if (this.options.selectable && this.plugins.SelectableRows) {\r\n      this.plugins.SelectableRows.clearCheckboxes(tbody);\r\n    }\r\n\r\n    // Store default height and update styles if needed\r\n    if (this.plugins.FixedHeight) {\r\n      this.plugins.FixedHeight.updateFakeRow();\r\n    }\r\n\r\n    // Enable/disable buttons if shown\r\n    if (this.btnFirst) {\r\n      this.btnFirst.disabled = this.page <= 1;\r\n      this.btnPrev.disabled = this.page <= 1;\r\n      this.btnNext.disabled = this.page >= this.pages;\r\n      this.btnLast.disabled = this.page >= this.pages;\r\n    }\r\n    tfoot.querySelector(\".dg-low\").textContent = low.toString();\r\n    tfoot.querySelector(\".dg-high\").textContent = high.toString();\r\n    tfoot.querySelector(\".dg-total\").textContent = \"\" + this.totalRecords();\r\n    tfoot.toggleAttribute(\"hidden\", this.options.autohidePager && this.options.perPage > this.totalRecords());\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  totalPages() {\r\n    return Math.ceil(this.totalRecords() / this.options.perPage);\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  totalRecords() {\r\n    if (this.options.server) {\r\n      return this.meta?.[this.options.serverParams.metaFilteredKey] || 0;\r\n    }\r\n    return this.data.length;\r\n  }\r\n}\r\n\r\nexport default DataGrid;\r\n", "/** @typedef {import(\"../data-grid\").default} DataGrid */\r\n\r\nclass BasePlugin {\r\n  /**\r\n   * @param {DataGrid} grid\r\n   */\r\n  constructor(grid) {\r\n    this.grid = grid;\r\n  }\r\n\r\n  connected() {}\r\n\r\n  disconnected() {}\r\n\r\n  /**\r\n   * Handle events within the plugin\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    if (this[`on${event.type}`]) {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n}\r\n\r\nexport default BasePlugin;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport elementOffset from \"../utils/elementOffset.js\";\r\nimport {\r\n  addClass,\r\n  dispatch,\r\n  findAll,\r\n  getAttribute,\r\n  hasClass,\r\n  off,\r\n  on,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to resize columns\r\n */\r\nclass ColumnResizer extends BasePlugin {\r\n  constructor(grid) {\r\n    super(grid);\r\n    this.isResizing = false;\r\n  }\r\n\r\n  /**\r\n   * @param {String} resizeLabel\r\n   */\r\n  renderResizer(resizeLabel) {\r\n    const grid = this.grid;\r\n    const table = grid.table;\r\n    const cols = findAll(grid, \"thead tr.dg-head-columns th\");\r\n\r\n    cols.forEach((col) => {\r\n      if (hasClass(col, \"dg-not-resizable\")) {\r\n        return;\r\n      }\r\n      // Create a resizer element\r\n      const resizer = document.createElement(\"div\");\r\n      addClass(resizer, \"dg-resizer\");\r\n      resizer.ariaLabel = resizeLabel;\r\n\r\n      // Add a resizer element to the column\r\n      col.appendChild(resizer);\r\n\r\n      // Handle resizing\r\n      let startX = 0;\r\n      let startW = 0;\r\n      let remainingSpace = 0;\r\n      let max = 0;\r\n\r\n      const mouseMoveHandler = (e) => {\r\n        if (e.clientX > max) {\r\n          return;\r\n        }\r\n        const newWidth = startW + (e.clientX - startX);\r\n        if (col.dataset.minWidth && newWidth > parseInt(col.dataset.minWidth)) {\r\n          setAttribute(col, \"width\", newWidth);\r\n        }\r\n      };\r\n\r\n      // When user releases the mouse, remove the existing event listeners\r\n      const mouseUpHandler = () => {\r\n        grid.log(\"resized column\");\r\n\r\n        // Prevent accidental sorting if mouse is not over resize handler\r\n        setTimeout(() => {\r\n          this.isResizing = false;\r\n        }, 0);\r\n\r\n        removeClass(resizer, \"dg-resizer-active\");\r\n        if (grid.options.reorder) {\r\n          col.draggable = true;\r\n        }\r\n        col.style.overflow = \"hidden\";\r\n\r\n        // Remove handlers\r\n        off(document, \"mousemove\", mouseMoveHandler);\r\n        off(document, \"mouseup\", mouseUpHandler);\r\n\r\n        dispatch(grid, \"columnResized\", {\r\n          col: getAttribute(col, \"field\"),\r\n          width: getAttribute(col, \"width\"),\r\n        });\r\n      };\r\n\r\n      // Otherwise it could sort the col\r\n      on(resizer, \"click\", (e) => {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      on(resizer, \"mousedown\", (e) => {\r\n        e.stopPropagation();\r\n\r\n        this.isResizing = true;\r\n\r\n        const target = e.target;\r\n        const currentCols = findAll(grid, \"dg-head-columns th\");\r\n        const visibleCols = currentCols.filter((col) => {\r\n          return !col.hasAttribute(\"hidden\");\r\n        });\r\n        const columnIndex = visibleCols.findIndex((column) => column == target.parentNode);\r\n        grid.log(\"resize column\");\r\n\r\n        addClass(resizer, \"dg-resizer-active\");\r\n\r\n        // Make sure we don't drag it\r\n        removeAttribute(col, \"draggable\");\r\n\r\n        // Allow overflow when resizing\r\n        col.style.overflow = \"visible\";\r\n\r\n        // Show full column height (-1 to avoid scrollbar)\r\n        resizer.style.height = table.offsetHeight - 1 + \"px\";\r\n\r\n        // Register initial data\r\n        startX = e.clientX;\r\n        startW = col.offsetWidth;\r\n\r\n        remainingSpace = (visibleCols.length - columnIndex) * 30;\r\n        max = elementOffset(target).left + grid.offsetWidth - remainingSpace;\r\n\r\n        // Remove width from next columns to allow auto layout\r\n        setAttribute(col, \"width\", startW);\r\n        for (let j = 0; j < visibleCols.length; j++) {\r\n          if (j > columnIndex) {\r\n            removeAttribute(cols[j], \"width\");\r\n          }\r\n        }\r\n\r\n        // Attach handlers\r\n        on(document, \"mousemove\", mouseMoveHandler);\r\n        on(document, \"mouseup\", mouseUpHandler);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default ColumnResizer;\r\n", "/**\r\n * @param {HTMLElement} el\r\n * @param {String} type\r\n * @param {String} prop\r\n * @returns {HTMLElement}\r\n */\r\nexport default function getParentElement(el, type, prop = \"nodeName\") {\r\n  let parent = el;\r\n  while (parent[prop] != type) {\r\n    parent = parent.parentElement;\r\n  }\r\n  return parent;\r\n}\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getParentElement from \"../utils/getParentElement.js\";\r\nimport { find, off, on, removeAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Create a right click menu on the headers\r\n */\r\nclass ContextMenu extends BasePlugin {\r\n  connected() {\r\n    /**\r\n     * @type {HTMLUListElement}\r\n     */\r\n    this.menu = this.grid.querySelector(\".dg-menu\");\r\n  }\r\n  disconnected() {\r\n    if (this.grid.headerRow) {\r\n      off(this.grid.headerRow, \"contextmenu\", this);\r\n    }\r\n  }\r\n\r\n  attachContextMenu() {\r\n    const grid = this.grid;\r\n    on(grid.headerRow, \"contextmenu\", this);\r\n  }\r\n\r\n  onchange(e) {\r\n    const grid = this.grid;\r\n    const t = e.target;\r\n    const field = t.dataset.name;\r\n    if (t.checked) {\r\n      grid.showColumn(field);\r\n    } else {\r\n      // Prevent hidding last\r\n      if (grid.visibleColumns().length <= 1) {\r\n        // Restore checkbox value\r\n        t.checked = true;\r\n        return;\r\n      }\r\n      grid.hideColumn(field);\r\n    }\r\n    grid.fixPage(); //fixes Chrome footer flexbox resize issues that may appear when there is a large number of columns (i.e. more than 10).\r\n  }\r\n\r\n  oncontextmenu(e) {\r\n    e.preventDefault();\r\n    const grid = this.grid;\r\n    const target = getParentElement(e.target, \"THEAD\");\r\n    const menu = this.menu;\r\n    const rect = target.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    menu.style.top = `${y}px`;\r\n    menu.style.left = `${x}px`;\r\n\r\n    removeAttribute(menu, \"hidden\");\r\n    if (x + 150 > rect.width) {\r\n      x -= menu.offsetWidth;\r\n      menu.style.left = `${x}px`;\r\n    }\r\n\r\n    const documentClickHandler = (e) => {\r\n      if (!menu.contains(e.target)) {\r\n        setAttribute(menu, \"hidden\", \"\");\r\n        off(document, \"click\", documentClickHandler);\r\n      }\r\n    };\r\n    on(document, \"click\", documentClickHandler);\r\n  }\r\n  createMenu() {\r\n    const grid = this.grid;\r\n    const menu = this.menu;\r\n    while (menu.lastChild) {\r\n      menu.removeChild(menu.lastChild);\r\n    }\r\n    menu.addEventListener(\"change\", this);\r\n    grid.options.columns.forEach((col) => {\r\n      if (col.attr) {\r\n        return;\r\n      }\r\n      const li = document.createElement(\"li\");\r\n      const label = document.createElement(\"label\");\r\n      const checkbox = document.createElement(\"input\");\r\n      setAttribute(checkbox, \"type\", \"checkbox\");\r\n      setAttribute(checkbox, \"data-name\", col.field);\r\n      if (!col.hidden) {\r\n        checkbox.checked = true;\r\n      }\r\n      const text = document.createTextNode(col.title);\r\n\r\n      label.appendChild(checkbox);\r\n      label.appendChild(text);\r\n\r\n      li.appendChild(label);\r\n      menu.appendChild(li);\r\n    });\r\n  }\r\n}\r\n\r\nexport default ContextMenu;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getParentElement from \"../utils/getParentElement.js\";\r\nimport { dispatch, findAll, getAttribute, on, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to move headers\r\n */\r\nclass DraggableHeaders extends BasePlugin {\r\n  /**\r\n   * @param {HTMLTableCellElement} th\r\n   */\r\n  makeHeaderDraggable(th) {\r\n    const grid = this.grid;\r\n    th.draggable = true;\r\n    on(th, \"dragstart\", (e) => {\r\n      if (grid.plugins.ColumnResizer && grid.plugins.ColumnResizer.isResizing && e.preventDefault) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      grid.log(\"reorder col\");\r\n      e.dataTransfer.effectAllowed = \"move\";\r\n      e.dataTransfer.setData(\"text/plain\", e.target.getAttribute(\"aria-colindex\"));\r\n    });\r\n    on(th, \"dragover\", (e) => {\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n      e.dataTransfer.dropEffect = \"move\";\r\n      return false;\r\n    });\r\n    on(th, \"drop\", (e) => {\r\n      if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n      }\r\n      const t = e.target;\r\n      const target = getParentElement(t, \"TH\");\r\n      const index = parseInt(e.dataTransfer.getData(\"text/plain\"));\r\n      const targetIndex = parseInt(target.getAttribute(\"aria-colindex\"));\r\n\r\n      if (index === targetIndex) {\r\n        grid.log(\"reordered col stayed the same\");\r\n        return;\r\n      }\r\n      grid.log(\"reordered col from \" + index + \" to \" + targetIndex);\r\n\r\n      const offset = grid.startColIndex();\r\n      const tmp = grid.options.columns[index - offset];\r\n      grid.options.columns[index - offset] = grid.options.columns[targetIndex - offset];\r\n      grid.options.columns[targetIndex - offset] = tmp;\r\n\r\n      const swapNodes = (selector, el1) => {\r\n        const rowIndex = el1.parentNode.getAttribute(\"aria-rowindex\");\r\n        const el2 = grid.querySelector(selector + \" tr[aria-rowindex='\" + rowIndex + \"'] [aria-colindex='\" + targetIndex + \"']\");\r\n        setAttribute(el1, \"aria-colindex\", targetIndex);\r\n        setAttribute(el2, \"aria-colindex\", index);\r\n        const newNode = document.createElement(\"th\");\r\n        el1.parentNode.insertBefore(newNode, el1);\r\n        el2.parentNode.replaceChild(el1, el2);\r\n        newNode.parentNode.replaceChild(el2, newNode);\r\n      };\r\n\r\n      // Swap all rows in header and body\r\n      findAll(grid, \"thead th[aria-colindex='\" + index + \"']\").forEach((el1) => {\r\n        swapNodes(\"thead\", el1);\r\n      });\r\n      findAll(grid, 'tbody td[aria-colindex=\"' + index + '\"]').forEach((el1) => {\r\n        swapNodes(\"tbody\", el1);\r\n      });\r\n\r\n      // Updates the columns\r\n      grid.options.columns = findAll(grid, \"thead tr.dg-head-columns th[field]\").map((th) =>\r\n        grid.options.columns.find((c) => c.field == getAttribute(th, \"field\"))\r\n      );\r\n\r\n      dispatch(grid, \"columnReordered\", {\r\n        col: tmp.field,\r\n        from: index,\r\n        to: targetIndex,\r\n      });\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nexport default DraggableHeaders;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\n\r\n/**\r\n * Allows to paginate with horizontal swipe motions\r\n */\r\nclass TouchSupport extends BasePlugin {\r\n  constructor(grid) {\r\n    super(grid);\r\n    this.touch = null;\r\n  }\r\n  connected() {\r\n    const grid = this.grid;\r\n    grid.addEventListener(\"touchstart\", this, { passive: true });\r\n    grid.addEventListener(\"touchmove\", this, { passive: true });\r\n  }\r\n\r\n  disconnected() {\r\n    const grid = this.grid;\r\n    grid.removeEventListener(\"touchstart\", this);\r\n    grid.removeEventListener(\"touchmove\", this);\r\n  }\r\n\r\n  ontouchstart(e) {\r\n    this.touch = e.touches[0];\r\n  }\r\n\r\n  ontouchmove(e) {\r\n    if (!this.touch) {\r\n      return;\r\n    }\r\n    const grid = this.grid;\r\n    const xDiff = this.touch.clientX - e.touches[0].clientX;\r\n    const yDiff = this.touch.clientY - e.touches[0].clientY;\r\n\r\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n      if (xDiff > 0) {\r\n        grid.getNext();\r\n      } else {\r\n        grid.getPrev();\r\n      }\r\n    }\r\n    this.touch = null;\r\n  }\r\n}\r\n\r\nexport default TouchSupport;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { dispatch, findAll, hasClass, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\nconst SELECTABLE_CLASS = \"dg-selectable\";\r\nconst SELECT_ALL_CLASS = \"dg-select-all\";\r\nconst CHECKBOX_CLASS = \"form-check-input\"; //bs5\r\n\r\n/**\r\n * Allows to select rows\r\n */\r\nclass SelectableRows extends BasePlugin {\r\n  disconnected() {\r\n    if (this.selectAll) {\r\n      this.selectAll.removeEventListener(\"change\", this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} key Return a specific key (eg: id) instead of the whole row\r\n   * @returns {Array}\r\n   */\r\n  getSelection(key = null) {\r\n    const grid = this.grid;\r\n    let selectedData = [];\r\n\r\n    const inputs = findAll(grid, `tbody .${SELECTABLE_CLASS} input:checked`);\r\n    inputs.forEach((checkbox) => {\r\n      const idx = parseInt(checkbox.dataset.id);\r\n      const item = grid.data[idx - 1];\r\n      if (!item) {\r\n        console.warn(`Item ${idx} not found`);\r\n      }\r\n      if (key) {\r\n        selectedData.push(item[key]);\r\n      } else {\r\n        selectedData.push(item);\r\n      }\r\n    });\r\n    return selectedData;\r\n  }\r\n\r\n  /**\r\n   * Uncheck box if hidden and visible only\r\n   * @param {HTMLTableSectionElement} tbody\r\n   */\r\n  clearCheckboxes(tbody) {\r\n    const grid = this.grid;\r\n    if (!grid.options.selectVisibleOnly) {\r\n      return;\r\n    }\r\n    const inputs = findAll(tbody, `tr[hidden] .${SELECTABLE_CLASS} input`);\r\n    inputs.forEach((input) => {\r\n      input.checked = false;\r\n    });\r\n    this.selectAll.checked = false;\r\n  }\r\n\r\n  colIndex() {\r\n    return this.grid.startColIndex() - 2;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  createHeaderCol(tr) {\r\n    let th = document.createElement(\"th\");\r\n    setAttribute(th, \"scope\", \"col\");\r\n    setAttribute(th, \"role\", \"columnheader button\");\r\n    setAttribute(th, \"aria-colindex\", this.colIndex());\r\n    th.classList.add(...[SELECTABLE_CLASS, \"dg-not-resizable\", \"dg-not-sortable\"]);\r\n    th.tabIndex = 0;\r\n\r\n    this.selectAll = document.createElement(\"input\");\r\n    this.selectAll.type = \"checkbox\";\r\n    this.selectAll.classList.add(SELECT_ALL_CLASS);\r\n    this.selectAll.classList.add(CHECKBOX_CLASS);\r\n    this.selectAll.addEventListener(\"change\", this);\r\n\r\n    let label = document.createElement(\"label\");\r\n    label.appendChild(this.selectAll);\r\n\r\n    th.appendChild(label);\r\n\r\n    th.setAttribute(\"width\", \"40\");\r\n    tr.appendChild(th);\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  createFilterCol(tr) {\r\n    let th = document.createElement(\"th\");\r\n    setAttribute(th, \"role\", \"columnheader button\");\r\n    setAttribute(th, \"aria-colindex\", this.colIndex());\r\n    th.classList.add(SELECTABLE_CLASS);\r\n    th.tabIndex = 0;\r\n\r\n    tr.appendChild(th);\r\n  }\r\n\r\n  /**\r\n   * Handles the selectAll checkbox when any other .dg-selectable checkbox is checked on table body.\r\n   * It should check selectAll if all is checked\r\n   * It should uncheck selectAll if any is unchecked\r\n   * @param {HTMLTableSectionElement} tbody\r\n   */\r\n  shouldSelectAll(tbody) {\r\n    if (!this.selectAll) {\r\n      return;\r\n    }\r\n    // Delegate listener for change events on input checkboxes\r\n    tbody.addEventListener(\"change\", this);\r\n    // Make sure state is up to date\r\n    tbody.dispatchEvent(new Event(\"change\"));\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  createDataCol(tr) {\r\n    // Create col\r\n    let td = document.createElement(\"td\");\r\n    setAttribute(td, \"role\", \"gridcell button\");\r\n    setAttribute(td, \"aria-colindex\", this.colIndex());\r\n    td.classList.add(SELECTABLE_CLASS);\r\n\r\n    // Create input\r\n    let selectOne = document.createElement(\"input\");\r\n    // Alias row id for easy retrieval in getSelection\r\n    selectOne.dataset.id = tr.getAttribute(\"aria-rowindex\");\r\n    selectOne.type = \"checkbox\";\r\n    selectOne.classList.add(CHECKBOX_CLASS);\r\n    // Label need to take full space thanks to css to make the whole cell clickable\r\n    let label = document.createElement(\"label\");\r\n    label.classList.add(\"dg-clickable-cell\");\r\n    label.appendChild(selectOne);\r\n    td.appendChild(label);\r\n\r\n    // Prevent unwanted click behaviour on row\r\n    label.addEventListener(\"click\", this);\r\n\r\n    tr.appendChild(td);\r\n  }\r\n\r\n  /**\r\n   * @param {Event} e\r\n   */\r\n  onclick(e) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Handle change event on select all or any select checkbox in the table body\r\n   * @param {import(\"../utils/shortcuts.js\").FlexibleEvent} e\r\n   */\r\n  onchange(e) {\r\n    const grid = this.grid;\r\n    if (hasClass(e.target, SELECT_ALL_CLASS)) {\r\n      const visibleOnly = grid.options.selectVisibleOnly;\r\n      const inputs = findAll(grid, `tbody .${SELECTABLE_CLASS} input`);\r\n      inputs.forEach((cb) => {\r\n        if (visibleOnly && !cb.offsetWidth) {\r\n          return;\r\n        }\r\n        cb.checked = this.selectAll.checked;\r\n      });\r\n\r\n      dispatch(grid, \"rowsSelected\", {\r\n        selection: this.getSelection(),\r\n      });\r\n    } else {\r\n      if (!e.target.closest(`.${SELECTABLE_CLASS}`)) {\r\n        return;\r\n      }\r\n      const totalCheckboxes = findAll(grid, `tbody .${SELECTABLE_CLASS} input[type=checkbox]`);\r\n      // @ts-ignore\r\n      const totalChecked = totalCheckboxes.filter((n) => n.checked);\r\n      this.selectAll.checked = totalChecked.length == totalCheckboxes.length;\r\n\r\n      dispatch(grid, \"rowsSelected\", {\r\n        selection: grid.getSelection(),\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default SelectableRows;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Support for fixed table height\r\n *\r\n * We should add a fake row to push the footer down in case we don't have enough rows\r\n */\r\nclass FixedHeight extends BasePlugin {\r\n  constructor(grid) {\r\n    super(grid);\r\n\r\n    this.hasFixedHeight = false;\r\n    // If we have a fixed height, make sure we have overflowY set\r\n    if (grid.style.height) {\r\n      grid.style.overflowY = \"auto\";\r\n      this.hasFixedHeight = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   */\r\n  createFakeRow() {\r\n    const grid = this.grid;\r\n    const tbody = grid.querySelector(\"tbody\");\r\n    let tr = document.createElement(\"tr\");\r\n    setAttribute(tr, \"role\", \"row\");\r\n    setAttribute(tr, \"hidden\", \"\");\r\n    tr.classList.add(\"dg-fake-row\");\r\n    tr.tabIndex = 0;\r\n    tbody.appendChild(tr);\r\n  }\r\n\r\n  get fakeRow() {\r\n    return this.grid.querySelector(\".dg-fake-row\");\r\n  }\r\n\r\n  /**\r\n   * On last page, use a fake row to push footer down\r\n   */\r\n  updateFakeRow() {\r\n    const grid = this.grid;\r\n    const fakeRow = this.fakeRow;\r\n    if (!fakeRow) {\r\n      return;\r\n    }\r\n\r\n    // We don't need a fake row if we display everything\r\n    if (grid.options.perPage > grid.totalRecords()) {\r\n      return;\r\n    }\r\n    // We are not on last page\r\n    if (grid.page !== grid.totalPages()) {\r\n      return;\r\n    }\r\n    if (!grid.options.autoheight) {\r\n      return;\r\n    }\r\n    // Find remaining missing height\r\n    const max = grid.options.perPage * grid.rowHeight;\r\n    const visibleRows = grid.querySelectorAll(\"tbody tr:not([hidden])\").length;\r\n    const fakeHeight = visibleRows > 1 ? max - visibleRows * grid.rowHeight : max;\r\n    if (fakeHeight > 0) {\r\n      setAttribute(fakeRow, \"height\", fakeHeight);\r\n      fakeRow.removeAttribute(\"hidden\");\r\n    } else {\r\n      fakeRow.removeAttribute(\"height\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default FixedHeight;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getTextWidth from \"../utils/getTextWidth.js\";\r\nimport { getAttribute, hasAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to resize columns\r\n */\r\nclass AutosizeColumn extends BasePlugin {\r\n  /**\r\n   * Autosize col based on column data\r\n   * @param {HTMLTableCellElement} th\r\n   * @param {import(\"../data-grid\").Column} column\r\n   * @param {Number} min\r\n   * @param {Number} max\r\n   * @returns {Number}\r\n   */\r\n  computeSize(th, column, min, max) {\r\n    const grid = this.grid;\r\n    if (hasAttribute(th, \"width\")) {\r\n      return getAttribute(th, \"width\");\r\n    }\r\n    if (!grid.data.length) {\r\n      return;\r\n    }\r\n    const firstVal = grid.data[0];\r\n    const lastVal = grid.data[grid.data.length - 1];\r\n    let v = firstVal[column.field] ? firstVal[column.field].toString() : \"\";\r\n    let v2 = lastVal[column.field] ? lastVal[column.field].toString() : \"\";\r\n    if (v2.length > v.length) {\r\n      v = v2;\r\n    }\r\n    let width = 0;\r\n    if (v.length <= 6) {\r\n      width = min;\r\n    } else if (v.length > 50) {\r\n      width = max;\r\n    } else {\r\n      // Add some extra room to have some spare space\r\n      width = getTextWidth(v + \"0000\", th);\r\n    }\r\n    if (width > max) {\r\n      width = max;\r\n    }\r\n    if (width < min) {\r\n      width = min;\r\n    }\r\n    setAttribute(th, \"width\", width);\r\n    return width;\r\n  }\r\n}\r\n\r\nexport default AutosizeColumn;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport debounce from \"../utils/debounce.js\";\r\nimport { addClass, ce, find, findAll, hasClass, insertAfter, removeAttribute, removeClass, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\nconst RESPONSIVE_CLASS = \"dg-responsive\";\r\n\r\nlet obsTo;\r\n\r\n/**\r\n * @param {Array<HTMLElement>} list\r\n * @returns {Array<HTMLElement>}\r\n */\r\nfunction sortByPriority(list) {\r\n  return list.sort((a, b) => {\r\n    const v1 = parseInt(a.dataset.responsive) || 1;\r\n    const v2 = parseInt(b.dataset.responsive) || 1;\r\n    return v2 - v1;\r\n  });\r\n}\r\n\r\n/**\r\n * @type {ResizeObserverCallback}\r\n */\r\n//@ts-ignore\r\nconst callback = debounce((entries) => {\r\n  for (const entry of entries) {\r\n    /**\r\n     * @type {import(\"../data-grid\").default}\r\n     */\r\n    // @ts-ignore\r\n    const grid = entry.target;\r\n    const table = grid.table;\r\n    if (grid.plugins.ResponsiveGrid.observerBlocked) {\r\n      return;\r\n    }\r\n    // check inlineSize (width) and not blockSize (height)\r\n    const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\r\n    const size = parseInt(contentBoxSize.inlineSize);\r\n    const tableWidth = table.offsetWidth;\r\n    const realTableWidth = findAll(grid.headerRow, \"th\").reduce((result, th) => {\r\n      return result + th.offsetWidth;\r\n    }, 0);\r\n    const diff = (realTableWidth || tableWidth) - size - 1;\r\n    const minWidth = 50;\r\n    const prevAction = grid.plugins.ResponsiveGrid.prevAction;\r\n    // We have an array with the columns to show/hide are in order, most important first\r\n    const headerCols = sortByPriority(\r\n      findAll(grid.headerRow, \"th[field]\")\r\n        .reverse() // Order takes precedence if no priority is set\r\n        .filter((col) => {\r\n          // Leave out unresponsive columns\r\n          return col.dataset.responsive !== \"0\";\r\n        })\r\n    );\r\n    let changed = false;\r\n\r\n    grid.log(`table is ${tableWidth}/${realTableWidth} and available size is ${size}. Diff: ${diff}`);\r\n\r\n    // The table is too big when diff has a high value, otherwise it will be like -1 or -2\r\n    if (diff > 0) {\r\n      if (prevAction === \"show\") {\r\n        return;\r\n      }\r\n      grid.plugins.ResponsiveGrid.prevAction = \"hide\";\r\n      let remaining = diff;\r\n      let cols = headerCols.filter((col) => {\r\n        return !col.hasAttribute(\"hidden\") && col.hasAttribute(\"data-responsive\");\r\n      });\r\n      if (cols.length === 0) {\r\n        cols = headerCols.filter((col) => {\r\n          return !col.hasAttribute(\"hidden\");\r\n        });\r\n        // Always keep one column\r\n        if (cols.length === 1) {\r\n          return;\r\n        }\r\n      }\r\n      cols.forEach((col) => {\r\n        if (remaining < 0) {\r\n          return;\r\n        }\r\n\r\n        const colWidth = col.offsetWidth;\r\n        const field = col.getAttribute(\"field\");\r\n        if (!field) {\r\n          return;\r\n        }\r\n        col.dataset.baseWidth = \"\" + col.offsetWidth;\r\n\r\n        grid.hideColumn(field, false);\r\n        grid.setColProp(field, \"responsiveHidden\", true);\r\n        changed = true;\r\n\r\n        remaining -= colWidth;\r\n        remaining = Math.round(remaining);\r\n      });\r\n    } else {\r\n      if (prevAction === \"hide\") {\r\n        return;\r\n      }\r\n      grid.plugins.ResponsiveGrid.prevAction = \"show\";\r\n\r\n      const requiredWidth =\r\n        headerCols\r\n          .filter((col) => {\r\n            return !col.hasAttribute(\"hidden\");\r\n          })\r\n          .reduce((result, col) => {\r\n            const width = col.dataset.minWidth ? parseInt(col.dataset.minWidth) : col.offsetWidth;\r\n            return result + width;\r\n          }, 0) + minWidth; // Add an offset so that inserting column is smoother\r\n\r\n      // Compute available width to insert columns\r\n      let remaining = size - requiredWidth;\r\n      // Do we have any hidden column that we can restore ?\r\n      headerCols\r\n        .slice()\r\n        .reverse() // Reverse the array to restore the columns in the proper order\r\n        .filter((col) => {\r\n          return col.hasAttribute(\"hidden\");\r\n        })\r\n        .forEach((col) => {\r\n          if (remaining < minWidth) {\r\n            return;\r\n          }\r\n          const colWidth = parseInt(col.dataset.minWidth);\r\n\r\n          // We need to have enough space to restore it\r\n          if (colWidth > remaining) {\r\n            remaining = -1; // break loop to keep restoring in order\r\n            return;\r\n          }\r\n\r\n          const field = col.getAttribute(\"field\");\r\n          if (!field) {\r\n            return;\r\n          }\r\n\r\n          grid.showColumn(field, false);\r\n          grid.setColProp(field, \"responsiveHidden\", false);\r\n          changed = true;\r\n\r\n          remaining -= colWidth;\r\n          remaining = Math.round(remaining);\r\n        });\r\n    }\r\n\r\n    // Check footer\r\n    const footer = find(grid.table, \"tfoot\");\r\n    const realFooterWidth = findAll(grid.table, \".dg-footer > div\").reduce((result, div) => {\r\n      return result + div.offsetWidth;\r\n    }, 0);\r\n    const availableFooterWidth = footer.offsetWidth - realFooterWidth;\r\n    if (realFooterWidth > size) {\r\n      addClass(footer, \"dg-footer-compact\");\r\n    } else if (availableFooterWidth > 250) {\r\n      removeClass(footer, \"dg-footer-compact\");\r\n    }\r\n    if (changed) {\r\n      grid.renderTable();\r\n    }\r\n    // Prevent resize loop\r\n    setTimeout(() => {\r\n      grid.plugins.ResponsiveGrid.prevAction = null;\r\n    }, 1000);\r\n    grid.table.style.visibility = \"visible\";\r\n  }\r\n}, 100);\r\nconst resizeObserver = new ResizeObserver(callback);\r\n\r\n/**\r\n * Responsive data grid\r\n */\r\nclass ResponsiveGrid extends BasePlugin {\r\n  constructor(grid) {\r\n    super(grid);\r\n\r\n    this.observerBlocked = false;\r\n    this.prevAction = null;\r\n  }\r\n\r\n  connected() {\r\n    if (this.grid.options.responsive) {\r\n      this.observe();\r\n    }\r\n  }\r\n\r\n  disconnected() {\r\n    this.unobserve();\r\n  }\r\n\r\n  observe() {\r\n    if (!this.grid.options.responsive) {\r\n      return;\r\n    }\r\n    resizeObserver.observe(this.grid);\r\n    this.grid.style.display = \"block\"; // Otherwise resize doesn't happen\r\n    this.grid.style.overflowX = \"hidden\"; // Prevent scrollbars from appearing\r\n  }\r\n\r\n  unobserve() {\r\n    resizeObserver.unobserve(this.grid);\r\n    this.grid.style.display = \"unset\";\r\n    this.grid.style.overflowX = \"unset\";\r\n  }\r\n\r\n  blockObserver() {\r\n    this.observerBlocked = true;\r\n    if (obsTo) {\r\n      clearTimeout(obsTo);\r\n    }\r\n  }\r\n\r\n  unblockObserver() {\r\n    obsTo = setTimeout(() => {\r\n      this.observerBlocked = false;\r\n    }, 200); // more than debounce\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  hasHiddenColumns() {\r\n    let flag = false;\r\n    this.grid.options.columns.forEach((col) => {\r\n      if (col.responsiveHidden) {\r\n        flag = true;\r\n      }\r\n    });\r\n    return flag;\r\n  }\r\n\r\n  colIndex() {\r\n    return this.grid.startColIndex() - 1;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  createHeaderCol(tr) {\r\n    if (!this.grid.options.responsiveToggle) {\r\n      return;\r\n    }\r\n    let th = ce(\"th\", tr);\r\n    setAttribute(th, \"scope\", \"col\");\r\n    setAttribute(th, \"role\", \"columnheader button\");\r\n    setAttribute(th, \"aria-colindex\", this.colIndex());\r\n    setAttribute(th, \"width\", \"40\");\r\n    th.classList.add(...[`${RESPONSIVE_CLASS}-toggle`, \"dg-not-resizable\", \"dg-not-sortable\"]);\r\n    th.tabIndex = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  createFilterCol(tr) {\r\n    if (!this.grid.options.responsiveToggle) {\r\n      return;\r\n    }\r\n    let th = ce(\"th\", tr);\r\n    setAttribute(th, \"role\", \"columnheader button\");\r\n    setAttribute(th, \"aria-colindex\", this.colIndex());\r\n    th.classList.add(`${RESPONSIVE_CLASS}-toggle`);\r\n    th.tabIndex = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  createDataCol(tr) {\r\n    if (!this.grid.options.responsiveToggle) {\r\n      return;\r\n    }\r\n    // Create col\r\n    let td = document.createElement(\"td\");\r\n    setAttribute(td, \"role\", \"gridcell button\");\r\n    setAttribute(td, \"aria-colindex\", this.colIndex());\r\n    td.classList.add(`${RESPONSIVE_CLASS}-toggle`);\r\n\r\n    // Create icon\r\n    td.innerHTML = `<div class='dg-clickable-cell'><svg class='${RESPONSIVE_CLASS}-open' viewbox=\"0 0 24 24\" height=\"24\" width=\"24\">\r\n  <line x1=\"7\" y1=\"12\" x2=\"17\" y2=\"12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\r\n  <line y1=\"7\" x1=\"12\" y2=\"17\" x2=\"12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\r\n</svg>\r\n<svg class='${RESPONSIVE_CLASS}-close' viewbox=\"0 0 24 24\" height=\"24\" width=\"24\" style=\"display:none\">\r\n  <line x1=\"7\" y1=\"12\" x2=\"17\" y2=\"12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\r\n</svg></div>`;\r\n    tr.appendChild(td);\r\n\r\n    td.addEventListener(\"click\", this);\r\n    td.addEventListener(\"mousedown\", this);\r\n  }\r\n\r\n  computeLabelWidth() {\r\n    let idealWidth = 0;\r\n    let consideredCol = 0;\r\n    while (idealWidth < 120) {\r\n      consideredCol++;\r\n      const hCol = find(this.grid, `.dg-head-columns th[aria-colindex=\"${consideredCol}\"]`);\r\n      if (hCol) {\r\n        idealWidth += hCol.offsetWidth;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return idealWidth;\r\n  }\r\n\r\n  /**\r\n   * @param {Event} ev\r\n   */\r\n  onmousedown(ev) {\r\n    // Avoid selection through double click\r\n    ev.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * @param {Event} ev\r\n   */\r\n  onclick(ev) {\r\n    // Prevent expandable\r\n    ev.stopPropagation();\r\n\r\n    // target is the element that triggered the event (e.g., the user clicked on)\r\n    // currentTarget is the element that the event listener is attached to.\r\n\r\n    /**\r\n     * @type {HTMLTableRowElement}\r\n     */\r\n    //@ts-ignore\r\n    const td = ev.currentTarget;\r\n    const tr = td.parentElement;\r\n    const open = find(td, `.${RESPONSIVE_CLASS}-open`);\r\n    const close = find(td, `.${RESPONSIVE_CLASS}-close`);\r\n\r\n    this.blockObserver();\r\n\r\n    const isExpanded = hasClass(tr, `${RESPONSIVE_CLASS}-expanded`);\r\n    if (isExpanded) {\r\n      removeClass(tr, `${RESPONSIVE_CLASS}-expanded`);\r\n      open.style.display = \"unset\";\r\n      close.style.display = \"none\";\r\n\r\n      // Move back rows and cleanup row\r\n      const childRow = tr.nextElementSibling;\r\n      const hiddenCols = findAll(childRow, `.${RESPONSIVE_CLASS}-hidden`);\r\n      hiddenCols.forEach((col) => {\r\n        // We don't really need to care where we insert them since we are going to redraw anyway\r\n        tr.appendChild(col);\r\n        setAttribute(col, \"hidden\");\r\n      });\r\n\r\n      childRow.parentElement.removeChild(childRow);\r\n    } else {\r\n      addClass(tr, `${RESPONSIVE_CLASS}-expanded`);\r\n      open.style.display = \"none\";\r\n      close.style.display = \"unset\";\r\n\r\n      // Create a child row and move rows into it\r\n      const childRow = ce(\"tr\");\r\n      insertAfter(childRow, tr);\r\n      addClass(childRow, `${RESPONSIVE_CLASS}-child-row`);\r\n\r\n      const childRowTd = ce(\"td\", childRow);\r\n      setAttribute(childRowTd, \"colspan\", this.grid.columnsLength(true));\r\n\r\n      const childTable = ce(\"table\", childRowTd);\r\n      addClass(childTable, `${RESPONSIVE_CLASS}-table`);\r\n\r\n      const hiddenCols = findAll(tr, `.${RESPONSIVE_CLASS}-hidden`);\r\n      const idealWidth = this.computeLabelWidth();\r\n      hiddenCols.forEach((col) => {\r\n        const childTableRow = ce(\"tr\", childTable);\r\n\r\n        // Add label\r\n        const label = col.dataset.name;\r\n        const labelCol = ce(\"th\", childTableRow);\r\n        // It looks much better when aligned with an actual col\r\n        labelCol.style.width = `${idealWidth}px`;\r\n        labelCol.innerHTML = label;\r\n\r\n        // Add actual row\r\n        childTableRow.appendChild(col);\r\n        removeAttribute(col, \"hidden\");\r\n      });\r\n    }\r\n\r\n    this.unblockObserver();\r\n  }\r\n}\r\n\r\nexport default ResponsiveGrid;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport interpolate from \"../utils/interpolate.js\";\r\nimport { dispatch, on, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Add action on rows\r\n */\r\nclass RowActions extends BasePlugin {\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  hasActions() {\r\n    return this.grid.options.actions.length > 0;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  makeActionHeader(tr) {\r\n    let actionsTh = document.createElement(\"th\");\r\n    setAttribute(actionsTh, \"role\", \"columnheader button\");\r\n    setAttribute(actionsTh, \"aria-colindex\", this.grid.columnsLength(true));\r\n    actionsTh.classList.add(...[\"dg-actions\", \"dg-not-sortable\", \"dg-not-resizable\", this.actionClass]);\r\n    actionsTh.tabIndex = 0;\r\n    tr.appendChild(actionsTh);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  makeActionFilter(tr) {\r\n    let actionsTh = document.createElement(\"th\");\r\n    actionsTh.setAttribute(\"role\", \"columnheader button\");\r\n    actionsTh.setAttribute(\"aria-colindex\", \"\" + this.grid.columnsLength(true));\r\n    actionsTh.classList.add(...[\"dg-actions\", this.actionClass]);\r\n    actionsTh.tabIndex = 0;\r\n    tr.appendChild(actionsTh);\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   * @param {Object} item\r\n   */\r\n  makeActionRow(tr, item) {\r\n    const labels = this.grid.labels;\r\n    const td = document.createElement(\"td\");\r\n    setAttribute(td, \"role\", \"gridcell\");\r\n    setAttribute(td, \"aria-colindex\", this.grid.columnsLength(true));\r\n    td.classList.add(...[\"dg-actions\", this.actionClass]);\r\n    td.tabIndex = 0;\r\n\r\n    // Add menu toggle\r\n    let actionsToggle = document.createElement(\"button\");\r\n    actionsToggle.classList.add(\"dg-actions-toggle\");\r\n    actionsToggle.innerHTML = \"\u2630\";\r\n    td.appendChild(actionsToggle);\r\n    on(actionsToggle, \"click\", (ev) => {\r\n      ev.stopPropagation();\r\n      ev.target.parentElement.classList.toggle(\"dg-actions-expand\");\r\n    });\r\n\r\n    this.grid.options.actions.forEach((action) => {\r\n      let button = document.createElement(\"button\");\r\n      if (action.html) {\r\n        button.innerHTML = action.html;\r\n      } else {\r\n        button.innerText = action.title ?? action.name;\r\n      }\r\n      if (action.title) {\r\n        button.title = action.title;\r\n      }\r\n      if (action.url) {\r\n        button.type = \"submit\";\r\n        button.formAction = interpolate(action.url, item);\r\n      }\r\n      if (action.class) {\r\n        button.classList.add(...action.class.split(\" \"));\r\n      }\r\n      const actionHandler = (ev) => {\r\n        ev.stopPropagation();\r\n        if (action.confirm) {\r\n          let c = confirm(labels.areYouSure);\r\n          if (!c) {\r\n            ev.preventDefault();\r\n            return;\r\n          }\r\n        }\r\n        dispatch(this.grid, \"action\", {\r\n          data: item,\r\n          action: action.name,\r\n        });\r\n      };\r\n      button.addEventListener(\"click\", actionHandler);\r\n      td.appendChild(button);\r\n\r\n      // Row action\r\n      if (action.default) {\r\n        tr.classList.add(\"dg-actionable\");\r\n        tr.addEventListener(\"click\", actionHandler);\r\n      }\r\n    });\r\n\r\n    tr.appendChild(td);\r\n  }\r\n\r\n  get actionClass() {\r\n    if (this.grid.options.actions.length < 3 && !this.grid.options.collapseActions) {\r\n      return \"dg-actions-\" + this.grid.options.actions.length;\r\n    }\r\n    return \"dg-actions-more\";\r\n  }\r\n}\r\n\r\nexport default RowActions;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { dispatch } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Make editable inputs in rows\r\n */\r\nclass EditableColumn extends BasePlugin {\r\n  /**\r\n   *\r\n   * @param {HTMLTableCellElement} td\r\n   * @param {import(\"../data-grid\").Column} column\r\n   * @param {Object} item\r\n   * @param {number} i\r\n   */\r\n  makeEditableInput(td, column, item, i) {\r\n    const gridId = this.grid.getAttribute(\"id\");\r\n    let input = document.createElement(\"input\");\r\n    input.type = column.editableType || \"text\";\r\n    if (input.type == \"email\") {\r\n      input.inputMode = \"email\";\r\n    }\r\n    if (input.type == \"decimal\") {\r\n      input.type = \"text\";\r\n      input.inputMode = \"decimal\";\r\n    }\r\n    input.autocomplete = \"off\";\r\n    input.spellcheck = false;\r\n    input.tabIndex = 0;\r\n    input.classList.add(\"dg-editable\");\r\n    input.name = gridId.replace(\"-\", \"_\") + \"[\" + (i + 1) + \"]\" + \"[\" + column.field + \"]\";\r\n    input.value = item[column.field];\r\n    input.dataset.field = column.field;\r\n\r\n    // Prevent row action\r\n    input.addEventListener(\"click\", (ev) => ev.stopPropagation());\r\n    // Enter validates edit\r\n    input.addEventListener(\"keypress\", (ev) => {\r\n      if (ev.type === \"keypress\") {\r\n        const key = ev.keyCode || ev.key;\r\n        if (key === 13 || key === \"Enter\") {\r\n          input.blur();\r\n          ev.preventDefault();\r\n        }\r\n      }\r\n    });\r\n    // Save on blur\r\n    input.addEventListener(\"blur\", () => {\r\n      // Only fire on update\r\n      if (input.value == item[input.dataset.field]) {\r\n        return;\r\n      }\r\n      // Update underlying data\r\n      item[input.dataset.field] = input.value;\r\n      // Notify\r\n      dispatch(this.grid, \"edit\", {\r\n        data: item,\r\n        value: input.value,\r\n      });\r\n    });\r\n    td.appendChild(input);\r\n  }\r\n}\r\n\r\nexport default EditableColumn;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { $ } from \"../utils/shortcuts.js\"\r\n\r\n/**\r\n * Adds an element for showing a spinning icon on grid loading.\r\n */\r\nclass SpinnerSupport extends BasePlugin {\r\n  /**\r\n   * Adds a spinner element with its associated css styles.\r\n   */\r\n  add() {\r\n    const grid = this.grid,\r\n      classes = grid.options.spinnerClass;\r\n    if (!classes) return;\r\n    const cls = classes.split(\" \").map(e => `.${e}`).join(\"\"),\r\n      template = `\r\n<style id=\"dg-styles\">\r\n  data-grid ${cls} { position: absolute; top: 37%; left: 47%; z-index: 999; }\r\n  data-grid:not(.dg-loading) ${cls} { display: none; }\r\n  data-grid:not(.dg-initialized).dg-loading ${cls} { top: 0; }\r\n  @media only screen and (max-width: 767px) {\r\n    data-grid[responsive] ${cls} { top: 8rem; left: 42%; } \r\n  }\r\n</style>\r\n`;\r\n    if (!$(\"#dg-styles\")) {\r\n      const styleParent = $(\"head\") ?? $(\"body\"),\r\n        position = /head/i.test(styleParent.tagName) ? \"beforeend\" : \"afterbegin\";\r\n      styleParent.insertAdjacentHTML(position, template);\r\n    }\r\n    !$(`i${cls}`, grid) && grid.insertAdjacentHTML(\"afterbegin\", `<i class=\"${classes}\"></i>`);\r\n  }\r\n}\r\n\r\nexport default SpinnerSupport;", "\uFEFFimport BasePlugin from \"../core/base-plugin.js\";\r\n\r\nclass SaveState extends BasePlugin {\r\n\r\n    constructor(grid) {\r\n        super(grid)\r\n        this.cachedState = null\r\n        this.isFilterSortSet = false\r\n        this.isDataLoaded = false\r\n        this.isScrolled = false\r\n        this.log('Init')\r\n    }\r\n\r\n    connected() {\r\n        this.log('connected')\r\n        const grid = this.grid\r\n\r\n        if (!grid.options.saveState) {\r\n            return\r\n        }\r\n\r\n        this.log('enabled')\r\n\r\n        let cachedState = this._getState()\r\n        if (cachedState) {\r\n\r\n            this.log('hide columns')\r\n            cachedState.columns.forEach((col) => {\r\n                if (col.hidden) {\r\n                    const hideCol = grid.options.columns.find((c) => c.field == col.field)\r\n                    hideCol.hidden = true\r\n                }\r\n            })\r\n\r\n            this.log('set: meta, pages')\r\n            grid.options.perPage = cachedState.perPage\r\n            if (grid.options.server) {\r\n                grid.meta = cachedState.meta\r\n                grid.pages = cachedState.pages\r\n                grid.page = cachedState.page\r\n            }\r\n        }\r\n\r\n        this.cachedState = cachedState\r\n\r\n        const dgLoadData = grid.loadData\r\n        grid.loadData = function () {\r\n            return (\r\n                new Promise((resolve, reject) => {\r\n                    dgLoadData.apply(this, arguments).finally(() => {\r\n                        const saveState = this.plugins.SaveState\r\n\r\n                        if (!grid.classList.contains('dg-initialized')) {\r\n                            saveState.log('not init, loadData skipped')\r\n                            return resolve()\r\n                        }\r\n\r\n                        saveState.log('loadData finished, set param controls')\r\n\r\n                        if (saveState.cachedState && !saveState.isFilterSortSet) {\r\n                            saveState.log('set sort and filters')\r\n\r\n                            grid.querySelectorAll('thead tr.dg-head-columns th[aria-sort]').forEach((el) => {\r\n                                el.setAttribute('aria-sort', 'none')\r\n                            })\r\n\r\n                            grid.querySelector(`thead tr.dg-head-columns th[field='${saveState.cachedState.sort}']`)?.setAttribute('aria-sort', saveState.cachedState.sortDir)\r\n                            grid.filterRow.querySelectorAll('[id^=dg-filter]').forEach((el) => {\r\n                                el.value = saveState.cachedState.filters[el.dataset.name]\r\n                            })\r\n                            saveState.isFilterSortSet = true\r\n                        }\r\n\r\n                        const newState = {\r\n                            meta: grid.meta,\r\n                            pages: grid.pages,\r\n                            page: grid.page,\r\n                            perPage: grid.options.perPage,\r\n                            filters: {},\r\n                            columns: grid.options.columns.map((col) => ({ field: col.field, hidden: col.hidden })),\r\n                            sort: grid.getSort(),\r\n                            sortDir: grid.getSortDir(),\r\n                            scrollTo: window.scrollY\r\n                        }\r\n\r\n                        const filters = grid.getFilters()\r\n                        Object.keys(filters).forEach((key) => {\r\n                            newState.filters[key] = filters[key]\r\n                        });\r\n\r\n                        saveState.log('store new state')\r\n                        saveState._setState(newState)\r\n\r\n                        if (!grid.options.server && saveState.cachedState && !saveState.isDataLoaded) {\r\n                            saveState.isDataLoaded = true\r\n                            grid.filterData()\r\n                            grid.page = saveState.cachedState.page\r\n                            grid.pageChanged()\r\n                        }\r\n\r\n                        resolve()\r\n                    });\r\n                })\r\n            );\r\n        }\r\n\r\n        const updateState = () => {\r\n            const saveState = grid.plugins.SaveState\r\n            const state = saveState._getState()\r\n            if (!state) {\r\n                return\r\n            }\r\n            state.columns = grid.options.columns.map((col) => ({ field: col.field, hidden: col.hidden }))\r\n            state.sort = grid.getSort()\r\n            state.sortDir = grid.getSortDir()\r\n            state.scrollTo = window.scrollY\r\n            saveState._setState(state)\r\n        }\r\n\r\n        document.addEventListener('scrollend', updateState)\r\n        grid.addEventListener('headerRendered', updateState)\r\n\r\n        grid.addEventListener('bodyRendered', function (ev) {\r\n            if (!grid.classList.contains('dg-initialized') || grid.classList.contains('dg-loading')) {\r\n                return\r\n            }\r\n\r\n            if (!grid.options.server) {\r\n                updateState()\r\n            }\r\n\r\n            const saveState = grid.plugins.SaveState\r\n            if (!saveState.cachedState || !saveState.isFilterSortSet) {\r\n                return\r\n            }\r\n\r\n            if (!saveState.isDataLoaded) {\r\n                saveState.isDataLoaded = true\r\n                grid.reload()\r\n            } else if (!saveState.isScrolled) {\r\n                saveState.isScrolled = true\r\n                window.scrollTo({ top: saveState.cachedState.scrollTo, left: 0, behavior: 'instant' })\r\n            }\r\n        })\r\n    }\r\n\r\n    log(message) {\r\n        this.grid.log(`[Save-State] ${message}`)\r\n    }\r\n\r\n    _getState() {\r\n        let state\r\n        try {\r\n            state = JSON.parse(sessionStorage.getItem(`gridSaveState_${this.grid.id}`))\r\n        } catch (_) {\r\n        }\r\n        return state\r\n    }\r\n\r\n    _setState(state) {\r\n        sessionStorage.setItem(`gridSaveState_${this.grid.id}`, JSON.stringify(state))\r\n    }\r\n}\r\n\r\nexport default SaveState ", "/**\n * Data Grid custom element\n * https://github.com/lekoala/data-grid/\n * @license MIT\n */\n\nimport DataGrid from \"./src/data-grid.js\";\n// Optional plugins\nimport ColumnResizer from \"./src/plugins/column-resizer.js\";\nimport ContextMenu from \"./src/plugins/context-menu.js\";\nimport DraggableHeaders from \"./src/plugins/draggable-headers.js\";\nimport TouchSupport from \"./src/plugins/touch-support.js\";\nimport SelectableRows from \"./src/plugins/selectable-rows.js\";\nimport FixedHeight from \"./src/plugins/fixed-height.js\";\nimport AutosizeColumn from \"./src/plugins/autosize-column.js\";\nimport ResponsiveGrid from \"./src/plugins/responsive-grid.js\";\nimport RowActions from \"./src/plugins/row-actions.js\";\nimport EditableColumn from \"./src/plugins/editable-column.js\";\nimport SpinnerSupport from \"./src/plugins/spinner-support.js\";\n\nimport SaveState from \"./src/plugins/save-state.js\";\n\n// Using shorthand property names\n// This make them reserved and keys will be preserved\n// Actual class names are renamed\nDataGrid.registerPlugins({\n  ColumnResizer,\n  ContextMenu,\n  DraggableHeaders,\n  TouchSupport,\n  SelectableRows,\n  FixedHeight,\n  AutosizeColumn,\n  ResponsiveGrid,\n  RowActions,\n  EditableColumn,\n  SpinnerSupport,\n  SaveState\n});\n\n// Prevent errors if included multiple times\nif (!customElements.get(\"data-grid\")) {\n  customElements.define(\"data-grid\", DataGrid);\n}\n\nexport default DataGrid;\n"],
  "mappings": "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",
  "names": ["camelize", "str", "m", "chr", "normalizeData", "v", "supportedPassiveTypes", "passiveOpts", "type", "getAttribute", "el", "name", "hasAttribute", "setAttribute", "v", "check", "removeAttribute", "on", "listener", "off", "dispatch", "el", "name", "data", "bubbles", "opts", "hasClass", "addClass", "removeClass", "toggleClass", "$", "selector", "base", "$$", "find", "findAll", "ce", "tagName", "parent", "el", "insertAfter", "newNode", "existingNode", "BaseElement", "options", "opt", "v", "setAttribute", "jsonConfig", "data", "key", "normalizeData", "message", "getAttribute", "event", "template", "dispatch", "attributeName", "oldValue", "newValue", "isOption", "transformer", "camelize", "base_element_default", "addSelectOption", "el", "value", "label", "checked", "opt", "appendParamsToUrl", "url", "params", "key", "k", "convertArray", "v", "elementOffset", "el", "rect", "scrollLeft", "scrollTop", "interpolate", "str", "data", "$1", "$2", "getTextWidth", "text", "el", "withPadding", "styles", "fontWeight", "fontSize", "fontFamily", "padding", "paddingLeft", "paddingRight", "context", "metrics", "randstr", "prefix", "debounce", "handler", "timeout", "timer", "args", "plugins", "labels", "applyColumnDefinition", "el", "column", "setAttribute", "addClass", "DataGrid", "_DataGrid", "base_element_default", "#filterSelector", "#excludedKeys", "randstr", "pluginName", "pluginClass", "attr", "camelize", "v", "list", "plugin", "columns", "cols", "key", "col", "item", "convertArray", "val", "updatePage", "addSelectOption", "field", "found", "prop", "c", "render", "dispatch", "start", "visibleOnly", "len", "tr", "find", "row", "removeAttribute", "findAll", "th", "fieldName", "value", "data", "metaKey", "dataKey", "cb", "needRender", "flagEmpty", "tbody", "resolve", "response", "err", "event", "filters", "input", "name", "haveClasses", "sort", "stack", "itemA", "itemB", "a", "b", "valA", "valB", "#sort", "columnName", "sortDir", "dir", "reject", "base", "url", "params", "appendParamsToUrl", "sortedColumn", "thead", "tfoot", "td", "availableWidth", "colMaxWidth", "idx", "ce", "sampleTh", "totalWidth", "colIdx", "computedWidth", "getTextWidth", "w", "colAvailableWidth", "visibleCols", "lastCol", "scrollbarWidth", "diff", "hasClass", "actualWidth", "minWidth", "newWidth", "sortableRow", "relatedTh", "filter", "eventName", "eventHandler", "debounce", "e", "isKeyPressFilter", "k", "isSelect", "uniqueValues", "opt", "i", "on", "ev", "toggleClass", "tv", "interpolate", "prev", "total", "p", "index", "high", "low", "getAttribute", "data_grid_default", "BasePlugin", "grid", "event", "base_plugin_default", "ColumnResizer", "base_plugin_default", "grid", "resizeLabel", "table", "cols", "findAll", "col", "hasClass", "resizer", "addClass", "startX", "startW", "remainingSpace", "max", "mouseMoveHandler", "e", "newWidth", "setAttribute", "mouseUpHandler", "removeClass", "off", "dispatch", "getAttribute", "on", "target", "visibleCols", "columnIndex", "column", "removeAttribute", "elementOffset", "j", "column_resizer_default", "getParentElement", "el", "type", "prop", "parent", "ContextMenu", "base_plugin_default", "off", "grid", "on", "e", "t", "field", "target", "getParentElement", "menu", "rect", "x", "y", "removeAttribute", "documentClickHandler", "setAttribute", "col", "li", "label", "checkbox", "text", "context_menu_default", "DraggableHeaders", "base_plugin_default", "th", "grid", "on", "e", "t", "target", "getParentElement", "index", "targetIndex", "offset", "tmp", "swapNodes", "selector", "el1", "rowIndex", "el2", "setAttribute", "newNode", "findAll", "c", "getAttribute", "dispatch", "draggable_headers_default", "TouchSupport", "base_plugin_default", "grid", "e", "xDiff", "yDiff", "touch_support_default", "SELECTABLE_CLASS", "SELECT_ALL_CLASS", "CHECKBOX_CLASS", "SelectableRows", "base_plugin_default", "key", "grid", "selectedData", "findAll", "checkbox", "idx", "item", "tbody", "input", "tr", "th", "setAttribute", "label", "td", "selectOne", "e", "hasClass", "visibleOnly", "cb", "dispatch", "totalCheckboxes", "totalChecked", "n", "selectable_rows_default", "FixedHeight", "base_plugin_default", "grid", "tbody", "tr", "setAttribute", "fakeRow", "max", "visibleRows", "fakeHeight", "fixed_height_default", "AutosizeColumn", "base_plugin_default", "th", "column", "min", "max", "grid", "hasAttribute", "getAttribute", "firstVal", "lastVal", "v", "v2", "width", "getTextWidth", "setAttribute", "autosize_column_default", "RESPONSIVE_CLASS", "obsTo", "sortByPriority", "list", "a", "b", "v1", "callback", "debounce", "entries", "entry", "grid", "table", "contentBoxSize", "size", "tableWidth", "realTableWidth", "findAll", "result", "th", "diff", "minWidth", "prevAction", "headerCols", "col", "changed", "remaining", "cols", "colWidth", "field", "requiredWidth", "width", "footer", "find", "realFooterWidth", "div", "availableFooterWidth", "addClass", "removeClass", "resizeObserver", "ResponsiveGrid", "base_plugin_default", "flag", "tr", "ce", "setAttribute", "td", "idealWidth", "consideredCol", "hCol", "ev", "open", "close", "hasClass", "childRow", "insertAfter", "childRowTd", "childTable", "hiddenCols", "childTableRow", "label", "labelCol", "removeAttribute", "responsive_grid_default", "RowActions", "base_plugin_default", "tr", "actionsTh", "setAttribute", "item", "labels", "td", "actionsToggle", "on", "ev", "action", "button", "interpolate", "actionHandler", "dispatch", "row_actions_default", "EditableColumn", "base_plugin_default", "td", "column", "item", "i", "gridId", "input", "ev", "key", "dispatch", "editable_column_default", "SpinnerSupport", "base_plugin_default", "grid", "classes", "cls", "e", "template", "$", "styleParent", "position", "spinner_support_default", "SaveState", "base_plugin_default", "grid", "cachedState", "col", "hideCol", "c", "dgLoadData", "resolve", "reject", "saveState", "el", "newState", "filters", "key", "updateState", "state", "ev", "message", "save_state_default", "data_grid_default", "column_resizer_default", "context_menu_default", "draggable_headers_default", "touch_support_default", "selectable_rows_default", "fixed_height_default", "autosize_column_default", "responsive_grid_default", "row_actions_default", "editable_column_default", "spinner_support_default", "save_state_default"]
}
